package Model.APPS.UCPROBE.v4_0_8.Templates;

import Model.APPS.UCPROBE.v4_0_8.UCPROBE

for (UCPROBE appIns : appInstancesList ) {
  String family = daveEnv.project.selectedDevice.deviceId.family 	//ex:XMC4 or XMC1
  
  out.print("""
/**
 * @file ucprobe_conf.h
 * @date 2016-06-30
 *
 * NOTE:
 * This file is generated by DAVE-4. Any manual modification done to this file will be lost when the code is regenerated.
 *
 * @cond
 ***********************************************************************************************************************
 *
 * Copyright (c) 2015-2016, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *   following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2016-06-30:
 *     - Initial version<br>
 * 
 * @endcond
 *
 */
#ifndef UCPROBE_CONF_H
#define UCPROBE_CONF_H

/**********************************************************************************************************************
 * MACROS
 **********************************************************************************************************************/

/* Macros for APP version */
#define UCPROBE_MAJOR_VERSION (${(UCPROBE.version).findAll( /\d+/ )*.toInteger()[0]}U)
#define UCPROBE_MINOR_VERSION (${(UCPROBE.version).findAll( /\d+/ )*.toInteger()[1]}U)
#define UCPROBE_PATCH_VERSION (${(UCPROBE.version).findAll( /\d+/ )*.toInteger()[2]}U)

#define UCPROBE_PROBESCOPE_EN (${appIns.gcheck_enable_oscilloscope.value ? "1" : "0"})
${
  def result = ""
  if (appIns.gcombo_comm_interface.value == "UART")
  {
    result = """
#define UCPROBE_UART_CH          XMC_UART${appIns.hwres_uart_ch.getSolverUri()[-3]}_CH${appIns.hwres_uart_ch.getSolverUri()[-1]}
#define UCPROBE_UART_TX_PIN      P${appIns.hwres_port_tx.getSolverUri()[-3]}_${appIns.hwres_port_tx.getSolverUri()[-1]}
#define UCPROBE_UART_RX_PIN      P${appIns.hwres_port_rx.getSolverUri()[-3]}_${appIns.hwres_port_rx.getSolverUri()[-1]}
#define UCPROBE_UART_BAUD_RATE   ${if(appIns.gcombo_baud_rate.value == "Custom Rate") {appIns.ginteger_custom_rate.value} else {appIns.gcombo_baud_rate.value}}
#define UCPROBE_UART_DATA_BITS   ${appIns.gcombo_data_bits.value}
#define UCPROBE_UART_STOP_BITS   ${appIns.gcombo_stop_bits.value}
#define UCPROBE_UART_PARITY_MODE XMC_USIC_CH_PARITY_MODE_${appIns.gcombo_parity.value.toUpperCase()}
#define UCPROBE_UART_TX_PRIO     ${appIns.ginterruptprio_tx_int.priorityValue}
#define UCPROBE_UART_RX_PRIO     ${appIns.ginterruptprio_rx_int.priorityValue}
#define UCPROBE_UART_TX_SUBPRIO  ${appIns.ginterruptprio_tx_int.subPriorityValue}
#define UCPROBE_UART_RX_SUBPRIO  ${appIns.ginterruptprio_rx_int.subPriorityValue}
#define UCPROBE_UART_TX_IRQN     ${appIns.hwres_nvic_tx_int.getSolverUri()[-1]}
#define UCPROBE_UART_RX_IRQN     ${appIns.hwres_nvic_rx_int.getSolverUri()[-1]}
#define UCPROBE_UART_TX_SR       ${appIns.hwres_uart_ch.getRegValue("inpr", "inpr_tbinp")}
#define UCPROBE_UART_RX_SR       ${appIns.hwres_uart_ch.getRegValue("inpr", "inpr_rinp")}
#define UCPROBE_UART_RX_MUX      ${appIns.hwres_uart_ch.getRegValue("dx0cr", "dx0cr_dsel")}
#define UCPROBE_UART_TX_MUX      XMC_GPIO_MODE_OUTPUT_ALT${appIns.hwres_port_tx.getRegValue("IOCR", "iocr_pcr")}

#define ProbeRS232_TxISRHandler  IRQ_Hdlr_${appIns.hwres_nvic_tx_int.getSolverUri()[-1]}
#define ProbeRS232_RxISRHandler  IRQ_Hdlr_${appIns.hwres_nvic_rx_int.getSolverUri()[-1]}
             """
  }
  result
}

#endif /* End of UCPROBE_CONF_H */
/* CODE_BLOCK_END */
  """);
}