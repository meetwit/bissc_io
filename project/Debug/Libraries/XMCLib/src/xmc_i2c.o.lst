   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_i2c.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_GetTransmitBufferStatus:
  25              	.LFB161:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2019-05-07
   4:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  84:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  85:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  86:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  87:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  88:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  89:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  90:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
  92:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
  93:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  94:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  95:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  96:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  97:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  98:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 100:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 101:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 102:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 103:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 104:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 105:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 106:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 107:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 108:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 109:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 110:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 111:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 112:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 113:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 114:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 115:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 116:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 117:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 118:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 119:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 120:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 121:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 122:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 123:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 124:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 125:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 126:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 127:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 128:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 129:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 130:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 131:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 132:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 133:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 134:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 135:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 136:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 137:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 138:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 139:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 140:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 141:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 142:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 143:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 145:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 146:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 147:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 148:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 149:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 152:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 153:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 154:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 156:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 157:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 158:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 159:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 160:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 161:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 162:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 163:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 164:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 167:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 168:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 169:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 170:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 171:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 172:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 173:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 174:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 175:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 176:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 177:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 178:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 179:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 181:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 182:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 183:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 185:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 186:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 187:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 188:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 189:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 190:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 191:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 192:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 193:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 194:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 195:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 196:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 197:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 198:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 199:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 200:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 201:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 202:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 203:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 205:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 206:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 207:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 208:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 209:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 211:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 212:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 213:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 214:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 215:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 216:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 217:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 218:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 219:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 220:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 221:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 222:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 224:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 225:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 226:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 227:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 228:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 231:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 233:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 235:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 236:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 237:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 238:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 239:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 240:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 241:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 242:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 243:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 244:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 245:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 246:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 247:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 248:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 249:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 250:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 251:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 252:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 253:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 254:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 255:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 256:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 257:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 258:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 259:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 260:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 261:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 262:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 263:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 264:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 265:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 266:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 267:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 268:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 269:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 270:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 271:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 272:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 273:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 274:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 275:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 276:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 277:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 278:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 279:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 280:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 281:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 282:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 283:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 284:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 285:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 286:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 287:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 288:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 289:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 290:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 291:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 292:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 293:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 294:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 295:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 296:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 297:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 298:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 299:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 300:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 301:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 302:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 303:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 304:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 305:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 306:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 307:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 308:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 309:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 310:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 311:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 312:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 313:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 314:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 315:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 316:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 317:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 318:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 319:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 320:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 321:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 322:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 323:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 324:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 325:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 326:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 327:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 328:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 329:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 330:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 331:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 332:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 333:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 334:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 335:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 336:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 337:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 338:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 339:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 340:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 341:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 342:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 343:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 344:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 345:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 346:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 347:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 348:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 349:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 350:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 351:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 352:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 353:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 354:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 355:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 356:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 357:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 358:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 359:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 360:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 361:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 362:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 363:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 364:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 365:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 366:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 367:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 368:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 369:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 370:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 371:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 372:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 373:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 374:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 375:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 376:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 377:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 378:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 379:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 380:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 381:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 382:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 383:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 384:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 385:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 386:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 387:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 388:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 389:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 390:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 391:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 392:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 393:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 394:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 395:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 396:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 397:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 398:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 399:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 400:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 401:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 402:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 403:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 404:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 405:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 406:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 407:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 408:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 409:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 410:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 411:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 412:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 413:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 414:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 415:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 416:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 417:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 418:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 419:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 420:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 421:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 422:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 423:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 424:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 425:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 426:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 427:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 428:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 429:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 430:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 431:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 432:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 433:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 434:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 435:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 436:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 437:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 438:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 439:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 440:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 441:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 442:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 443:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 444:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 445:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 446:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 447:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 448:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 449:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 450:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 451:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 452:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 453:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 454:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 455:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 456:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 457:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 458:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
 459:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 460:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 461:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 462:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 463:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 464:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 465:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 466:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 467:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 468:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 469:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 471:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 472:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 473:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 474:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 475:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 476:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 477:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 478:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 479:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 480:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 481:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 482:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 483:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 484:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 485:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 486:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 487:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 488:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 489:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 490:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 491:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 492:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 493:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 494:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 495:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 496:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 497:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 498:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 499:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 500:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 501:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 502:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 503:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 504:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 505:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 506:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 507:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 508:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 509:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   };
 510:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 511:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 512:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 514:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 515:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 516:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 517:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 518:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 519:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   };
 520:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 521:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 522:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 523:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 524:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 525:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 526:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 527:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 528:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 529:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 530:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 531:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 532:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 533:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 534:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 535:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 536:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 537:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 538:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 539:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 540:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 541:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 542:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 543:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 544:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 545:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 546:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 547:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 548:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 549:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 550:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 551:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 552:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 553:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 554:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 555:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 556:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 557:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 558:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 559:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 560:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 561:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 562:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 563:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 564:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 565:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 566:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 567:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 568:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 569:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 570:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 571:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 572:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 573:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 574:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 575:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 576:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 577:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 578:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 579:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 580:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 581:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 582:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 583:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 584:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 585:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 586:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 587:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 588:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 589:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 590:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 591:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 592:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 593:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 594:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 595:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 596:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 597:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 598:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 599:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 600:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 601:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 602:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 603:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 604:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 605:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 606:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 607:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 608:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 609:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 610:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 611:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 612:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 613:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 614:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 615:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 616:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 617:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 618:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 619:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 620:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 621:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 622:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 623:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 624:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 625:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 626:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 627:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 628:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 629:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 630:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 631:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 632:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 633:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 634:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 635:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 636:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 637:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 639:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 640:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 641:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 642:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 643:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 644:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 645:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 646:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 647:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 648:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 649:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 650:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 651:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 652:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 653:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 654:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 655:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 656:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 657:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 658:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 659:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 660:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 661:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 662:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 663:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 664:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 665:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 666:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 667:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 668:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 669:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 670:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 673:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 674:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 675:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 676:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 677:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 678:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 679:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 680:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 681:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 682:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 683:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 684:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 685:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 686:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 687:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 688:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 689:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 690:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_
 691:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 692:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 693:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 694:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 695:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 696:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 697:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 698:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 699:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 700:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 701:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 702:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 703:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 704:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 705:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 706:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 707:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 708:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 709:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 710:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 711:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 712:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 713:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 714:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 715:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 716:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 717:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 719:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 720:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 721:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 722:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 723:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 724:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 725:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 726:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 727:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 728:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 729:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 730:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 731:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 732:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 733:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 734:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 735:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 736:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 737:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 738:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 739:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 740:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 741:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 742:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 743:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 744:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 745:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 746:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 747:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 748:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 749:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 750:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 751:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 752:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 753:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 754:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 755:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 756:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 757:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 758:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 759:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 760:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 761:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 762:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 763:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 764:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 765:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 766:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 767:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 768:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 769:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 770:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 771:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 772:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 773:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 774:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 775:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 776:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 777:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 778:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 779:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 780:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 781:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 783:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 784:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 785:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 786:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 787:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 788:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 789:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 790:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 791:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 792:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 793:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 795:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 796:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 797:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 798:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 799:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 800:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 801:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 802:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 803:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 804:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 805:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 806:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 807:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 808:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 809:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 810:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 811:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 812:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 813:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 814:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 815:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 816:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 817:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 818:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 819:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 820:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 821:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 822:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 823:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 824:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 825:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 826:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 827:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 828:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 829:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 830:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 831:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 832:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 833:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 834:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 835:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 836:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 837:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 838:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 839:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 841:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 842:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 843:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 844:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 845:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 846:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 847:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 848:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 849:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 850:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 851:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 852:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 853:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 854:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 855:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 856:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 857:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 858:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 859:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 860:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 861:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 862:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 863:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 864:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 865:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 866:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 867:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 868:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 869:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 870:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 871:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 872:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 873:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 875:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 876:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 877:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 878:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 879:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 880:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 881:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 882:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 883:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 884:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 885:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 886:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 887:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 888:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 889:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 890:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 892:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 893:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 894:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 895:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 896:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 897:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 898:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 899:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 900:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 901:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 902:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 903:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 904:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 905:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 906:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 907:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 908:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 909:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 910:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 911:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 912:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 913:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 914:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 915:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 916:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 917:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 918:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 919:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 920:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 921:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 922:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 923:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 924:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 925:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 926:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 927:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 928:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 929:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 930:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 931:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 932:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 933:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 934:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 935:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 936:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 937:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 938:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 939:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 940:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 941:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 942:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 943:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 944:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 945:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 946:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 947:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 948:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 949:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 950:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 951:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 952:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 953:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 954:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 955:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 956:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 957:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 958:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 959:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 960:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 961:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 962:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 963:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 964:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 965:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 966:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 967:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 968:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 969:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 970:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 971:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 972:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 973:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 974:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 975:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 976:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 977:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 978:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 979:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 980:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 981:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 982:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
 983:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 984:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 985:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
 986:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 987:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 988:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 989:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
 990:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 991:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 992:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
 993:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
 994:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
 995:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 996:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 997:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 998:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 999:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1000:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1001:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1002:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1003:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1004:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1005:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1006:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1007:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1008:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1009:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
1010:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
1011:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1012:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1013:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1014:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1016:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1017:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1018:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1019:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1020:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1024:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1025:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1026:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1027:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1028:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1029:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1030:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1031:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1032:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1033:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1034:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1035:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1036:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1037:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1038:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1039:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1040:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1041:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1042:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1043:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1044:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1045:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1046:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1047:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1048:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1049:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1050:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1051:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1052:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1053:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1054:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1055:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1056:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1057:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1058:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1059:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1060:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1061:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1062:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1063:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1064:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1065:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1066:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1068:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1070:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint16_t data,
1071:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint32_t transmit_control_information)
1072:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1073:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1074:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1075:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1076:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1077:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1078:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1079:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1080:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1081:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1082:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1083:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1084:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1085:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1086:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1087:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1088:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1089:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1090:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1091:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1092:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1093:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1094:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1095:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1096:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1097:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1098:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1099:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1100:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1101:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1102:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1103:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1104:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1105:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1106:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1107:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1108:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1109:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1110:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1111:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1112:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1113:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1114:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1115:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1116:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1117:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1118:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1119:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1120:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1121:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value 
1122:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1123:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1124:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1125:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1126:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1127:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1128:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1129:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1130:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1131:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1132:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1133:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1134:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1135:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1136:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1137:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1138:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1139:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1140:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1141:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1142:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1143:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1144:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1145:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1146:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1147:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1148:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1149:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1150:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1151:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1152:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1153:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1154:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1155:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1156:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1157:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1158:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1159:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1160:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1161:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1162:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1163:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly. 
1164:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1165:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1166:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1167:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1168:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1169:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1170:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1171:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1172:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1173:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1174:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1175:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1176:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1177:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1178:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1179:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1180:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1181:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1182:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1183:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1184:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1185:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1186:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1187:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1188:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1189:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1190:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1191:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1192:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1193:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1194:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1195:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1196:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1197:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1198:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1199:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1200:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1201:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1202:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1203:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1204:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1205:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1206:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1207:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1208:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1209:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1210:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1211:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
1212:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1213:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1214:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1215:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1216:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1217:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1218:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1219:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1220:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1221:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1222:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1223:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1224:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1225:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1226:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1227:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1228:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1229:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1230:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1231:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1232:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1233:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1234:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1235:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1236:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1237:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1238:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                          const uint32_t service_request);
1239:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1240:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1241:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1242:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1243:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1244:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1245:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1246:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1247:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1248:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1249:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1250:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1251:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1252:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1253:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1254:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1255:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1256:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1257:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 1257 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1258:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
  43              	 .loc 1 1258 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 9B6B     	 ldr r3,[r3,#56]
  46 000c DBB2     	 uxtb r3,r3
  47 000e 23F07F03 	 bic r3,r3,#127
  48 0012 DBB2     	 uxtb r3,r3
1259:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
  49              	 .loc 1 1259 0
  50 0014 1846     	 mov r0,r3
  51 0016 0C37     	 adds r7,r7,#12
  52              	.LCFI3:
  53              	 .cfi_def_cfa_offset 4
  54 0018 BD46     	 mov sp,r7
  55              	.LCFI4:
  56              	 .cfi_def_cfa_register 13
  57              	 
  58 001a 5DF8047B 	 ldr r7,[sp],#4
  59              	.LCFI5:
  60              	 .cfi_restore 7
  61              	 .cfi_def_cfa_offset 0
  62 001e 7047     	 bx lr
  63              	 .cfi_endproc
  64              	.LFE161:
  66              	 .section .text.XMC_USIC_CH_SetMode,"ax",%progbits
  67              	 .align 2
  68              	 .thumb
  69              	 .thumb_func
  71              	XMC_USIC_CH_SetMode:
  72              	.LFB196:
1260:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1261:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1262:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1263:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1264:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1265:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1266:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1267:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1268:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1269:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1270:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1271:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1272:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1273:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte. 
1274:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1275:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1276:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1277:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1278:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1279:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1280:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1281:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1282:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1283:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1284:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1285:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1286:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1287:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1288:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1289:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1290:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1291:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1292:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1293:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *                              
1294:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1295:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1296:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1297:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1298:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1299:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1300:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1301:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1302:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1303:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1304:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                          const XMC_USIC_CH_START_TRANSMISION_MODE_t
1305:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1306:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1307:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1308:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1309:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1310:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1311:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1312:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1313:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1314:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1315:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1316:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1317:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1318:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1319:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1320:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1321:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1322:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1323:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1324:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1325:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output
1326:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1327:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1328:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1329:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1330:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1331:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1332:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1333:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1334:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1335:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1336:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1337:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the 
1338:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1339:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1340:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1341:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1342:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1343:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1344:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1345:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1346:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1347:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1348:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_SELMD_Msk |
1349:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_WAMD_Msk |
1350:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_HPCMD_Msk))) |
1351:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                          (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1352:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1353:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1354:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1355:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1356:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1357:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1358:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1359:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1360:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1361:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1362:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1363:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1364:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1365:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1366:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1367:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1368:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1369:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1370:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1371:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1372:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1373:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1374:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1375:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1376:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1377:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1378:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1379:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1380:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1381:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1382:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1383:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1384:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1385:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1386:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1387:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1388:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1389:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1390:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1391:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1392:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1393:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1394:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1395:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1396:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1397:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1398:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1399:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1400:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1401:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1402:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1403:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1404:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1405:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1406:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1407:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1408:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1409:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1410:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1411:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1412:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1413:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1414:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1415:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1416:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be 
1417:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled. 
1418:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1419:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1420:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1421:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1422:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1423:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1424:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1425:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1426:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1427:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1428:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1429:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1430:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1431:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1432:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1433:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1434:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1435:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1436:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1437:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1438:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1439:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1440:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1441:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                 const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buf
1442:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1443:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1444:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1445:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1446:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1447:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1448:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1449:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1450:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1451:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1452:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1453:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1454:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1455:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the 
1456:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1457:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1458:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1459:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1460:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1461:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1462:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                      const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive
1463:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1464:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1465:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1466:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1467:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1468:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1469:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1470:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1471:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1472:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1473:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1474:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1475:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1476:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1477:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1478:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1479:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1480:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1481:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1482:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1483:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1484:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1485:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1486:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1487:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1488:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1489:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1490:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1491:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1492:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1493:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1494:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1495:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1496:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1497:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1498:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1499:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1500:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1501:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1502:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1503:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1504:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1505:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1506:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1507:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the 
1508:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1509:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1510:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1511:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1512:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1513:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1514:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1515:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1516:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1517:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1518:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1519:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1520:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1521:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1522:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1523:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1524:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1525:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1526:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1527:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1528:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1529:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1530:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1531:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1532:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1533:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1534:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1535:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1536:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1537:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1538:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1539:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1540:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1541:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1542:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1543:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1544:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1545:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1546:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1547:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1548:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1549:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1550:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1551:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent(). 
1552:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1553:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1554:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1556:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1557:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1558:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1559:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1560:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1561:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1562:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1563:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1564:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1565:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1566:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1567:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1568:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1569:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1570:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1571:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1572:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1573:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1574:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1575:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1576:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1577:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1578:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1579:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1580:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1581:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1582:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1583:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1584:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1585:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1586:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1587:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1588:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
1589:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1590:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1591:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1592:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1593:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1594:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1595:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1596:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1597:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1598:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1599:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1600:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1601:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1602:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1603:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1604:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1605:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1606:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1607:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1608:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1609:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1610:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1611:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1612:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1613:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1614:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1615:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1616:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1617:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1618:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1619:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1620:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1621:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1622:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1623:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1624:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1625:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1626:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1627:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1628:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1629:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1630:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1631:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1632:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1633:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1634:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1635:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1636:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1637:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1638:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1639:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1640:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1641:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1642:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1643:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1644:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1645:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1646:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1647:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1648:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1649:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1650:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1651:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1652:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1653:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1654:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1655:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1656:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1657:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1658:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1659:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1660:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1661:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1662:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1663:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1664:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1665:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1666:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1667:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1668:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1669:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1670:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1671:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1672:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1673:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1674:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1675:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1676:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1677:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1678:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1679:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1680:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1681:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1682:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1683:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1684:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1685:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1686:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1687:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1688:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1689:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1690:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1691:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1692:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1693:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1694:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1695:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1696:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1697:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1698:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1699:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1700:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1701:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1702:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1703:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1704:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO, 
1705:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1706:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1707:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1708:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1709:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1710:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1711:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1712:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1713:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1714:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1715:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1716:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1717:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1718:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n 
1719:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1720:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1721:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1722:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1723:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1724:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1725:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1726:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1727:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1728:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1729:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1730:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1731:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1732:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1733:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1734:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1735:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1736:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1737:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1738:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1739:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1740:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1741:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1742:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1743:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1744:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1745:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1746:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1747:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1748:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1749:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1750:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1751:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1752:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1753:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1754:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_TBERI_Msk));
1755:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1756:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1757:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1758:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1759:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1760:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1761:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1762:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1763:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1764:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1765:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1766:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1767:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1768:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1769:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1770:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1771:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1772:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1773:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1774:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1775:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1776:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1777:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1778:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1779:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1780:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1781:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1782:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1783:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1784:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1785:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1786:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1787:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1788:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1789:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1790:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1791:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1792:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1793:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1794:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1795:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1796:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1797:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1798:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1799:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1800:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1801:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1802:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** */
1803:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1804:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1805:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1806:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1807:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1808:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1809:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1810:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1811:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1812:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1813:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1814:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1815:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1816:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1817:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1818:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1819:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the 
1820:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1821:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1822:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1823:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1824:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1825:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1826:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1827:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1828:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1829:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1830:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1831:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1832:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1833:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1834:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1835:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1836:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1837:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
1838:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1839:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
1840:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1841:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1842:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1843:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1844:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1845:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1846:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1847:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1848:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1849:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
1850:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1851:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1852:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1853:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1854:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1855:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1856:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
1857:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
1858:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
1859:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1860:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1861:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1862:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
1863:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1864:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent(). 
1865:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
1866:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1867:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1868:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1869:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1870:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1871:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1872:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1873:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
1874:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1875:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1876:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1877:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1878:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1879:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
1880:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1881:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1882:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
1883:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
1884:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1885:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1886:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1887:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
1888:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1889:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1890:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1891:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
1892:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1893:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1894:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1895:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1896:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1897:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1898:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1899:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1900:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1901:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
1902:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1903:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1904:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1905:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1906:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1907:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
1908:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
1909:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1910:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1911:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
1912:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
1913:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
1914:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
1915:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
1916:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1917:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1918:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
1919:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1920:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
1921:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1922:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
1923:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1924:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1925:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1926:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1927:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1928:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1929:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1930:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1931:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
1932:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
1933:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1934:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1935:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
1936:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1937:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
1938:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1939:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
1940:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1941:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1942:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1943:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1944:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1945:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
1946:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
1947:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1948:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1949:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
1950:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
1951:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
1952:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1953:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1954:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
1955:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1956:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1957:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1958:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
1959:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1960:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1961:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1962:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1963:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1964:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
1965:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
1966:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1967:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1968:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
1969:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
1970:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
1971:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
1972:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1973:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1974:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1975:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1976:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1977:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1978:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
1979:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
1980:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
1981:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
1982:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1983:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1984:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
1985:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
1986:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
1987:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1988:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
1989:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
1990:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the 
1991:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
1992:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1993:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1994:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1995:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
1996:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1997:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
1998:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
1999:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
2000:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
2001:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
2002:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2003:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2004:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
2005:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2006:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2007:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
2008:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2009:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
2010:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
2011:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
2012:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
2013:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
2014:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
2015:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
2016:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
2017:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2018:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
2019:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
2020:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
2021:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
2022:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
2023:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_RBERI_Msk |
2024:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_ARBI_Msk));
2025:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
2026:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
2027:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
2028:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2029:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2030:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
2031:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2032:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2033:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2034:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
2035:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2036:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
2037:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
2038:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
2039:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
2040:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
2041:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
2042:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
2043:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2044:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
2045:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
2046:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
2047:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
2048:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
2049:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
2050:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
2051:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
2052:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
2053:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2054:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2055:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2056:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
2057:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2058:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
2059:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
2060:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
2061:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2062:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
2063:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
2064:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
2065:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
2066:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
2067:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
2068:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
2069:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
2070:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2071:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2072:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2073:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
2074:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2075:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
2076:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
2077:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
2078:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2079:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
2080:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
2081:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
2082:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
2083:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
2084:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
2085:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
2086:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
2087:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2088:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2089:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
2090:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
2091:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2092:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
2093:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2094:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
2095:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
2096:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
2097:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSI
2098:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
2099:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
2100:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
2101:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
2102:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2103:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2104:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
2105:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
2106:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
2107:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
2108:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
2109:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
2110:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
2111:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
2112:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2113:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
2114:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2115:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
2116:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
2117:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
2118:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
2119:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
2120:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
2121:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 
2122:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
2123:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
2124:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIV
2125:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
2126:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
2127:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
2128:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                                              USIC_CH_BRG_SCLKOSEL_Msk))) |
2129:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
2130:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
2131:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
2132:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** 
2133:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** /**
2134:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2135:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2136:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @param mode USIC channel operation mode. \n
2137:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_OPERATING_MODE_IDLE, @ref XMC_USIC_CH_OPERATING_MODE_SPI,
2138:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_UART, @ref XMC_USIC_CH_OPERATING_MODE_I2S,
2139:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_I2C.
2140:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2141:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
2142:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2143:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the USIC channel operation mode.\n\n
2144:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S.
2145:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * The API sets the input operation mode to the USIC channel.
2146:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  *
2147:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2148:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_Enable(), XMC_USIC_CH_Enable() \n\n\n
2149:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****  */
2150:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMode(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_
2151:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** {
  73              	 .loc 1 2151 0
  74              	 .cfi_startproc
  75              	 
  76              	 
  77              	 
  78 0000 80B4     	 push {r7}
  79              	.LCFI6:
  80              	 .cfi_def_cfa_offset 4
  81              	 .cfi_offset 7,-4
  82 0002 83B0     	 sub sp,sp,#12
  83              	.LCFI7:
  84              	 .cfi_def_cfa_offset 16
  85 0004 00AF     	 add r7,sp,#0
  86              	.LCFI8:
  87              	 .cfi_def_cfa_register 7
  88 0006 7860     	 str r0,[r7,#4]
  89 0008 0B46     	 mov r3,r1
  90 000a FB70     	 strb r3,[r7,#3]
2152:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR = (uint32_t)(channel->CCR & (~(USIC_CH_CCR_MODE_Msk))) | (uint32_t)mode;
  91              	 .loc 1 2152 0
  92 000c 7B68     	 ldr r3,[r7,#4]
  93 000e 1B6C     	 ldr r3,[r3,#64]
  94 0010 23F00F02 	 bic r2,r3,#15
  95 0014 FB78     	 ldrb r3,[r7,#3]
  96 0016 1A43     	 orrs r2,r2,r3
  97 0018 7B68     	 ldr r3,[r7,#4]
  98 001a 1A64     	 str r2,[r3,#64]
2153:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_usic.h **** }
  99              	 .loc 1 2153 0
 100 001c 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 001e BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 0020 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 0024 7047     	 bx lr
 112              	 .cfi_endproc
 113              	.LFE196:
 115 0026 00BF     	 .section .text.XMC_I2C_CH_ClearStatusFlag,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_I2C_CH_ClearStatusFlag:
 121              	.LFB204:
 122              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc/xmc_i2c.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @file xmc_i2c.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @date 2019-05-07
   4:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Initial <br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *      
  42:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-05-20:
  43:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Description updated <br>
  44:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_TriggerServiceRequest() and XMC_I2C_CH_SelectInterruptNodePointer() <br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-06-20:
  47:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  49:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-08-27:
  50:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for external input for BRG configuration:XMC_I2C_CH_ConfigExternalInputSignalTo
  51:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  52:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-09-01:
  53:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for enabling or disabling the ACK response to a 0x00 slave address: XMC_I2C_CH_
  54:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *       XMC_I2C_CH_DisableSlaveAcknowledgeTo00(). <br>
  55:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_SetInputSource() API for avoiding complete DXCR register overwriting. 
  56:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_EVENT_t enum for supporting XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_Di
  57:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *       for supporting multiple events configuration <br>
  58:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  59:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-02:
  60:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix 10bit addressing
  61:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  62:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-07:
  63:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix register access in XMC_I2C_CH_EnableSlaveAcknowledgeTo00() and XMC_I2C_CH_DisableSlave
  64:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Naming of APIs modified: from XMC_I2C_CH_EnableSlaveAcknowledgeTo00() to  XMC_I2C_CH_Enabl
  65:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *       and from XMC_I2C_CH_DisableSlaveAcknowledgeTo00() to XMC_I2C_CH_DisableAcknowledgeAddress0
  66:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  67:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-05-20:
  68:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableDataTransmission() and XMC_I2C_CH_DisableDataTransmission()
  69:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  70:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-08-17:
  71:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Improved documentation of slave address passing
  72:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  73:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2017-10-25:
  74:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableMasterClock() and XMC_I2C_CH_DisableMasterClock()
  75:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  76:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-05-07:
  77:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added normal_divider_mode to XMC_I2C_CH_CONFIG_t configuration structure.
  78:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  79:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetBaudrateEx()
  80:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @endcond 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  83:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  84:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
  85:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #ifndef XMC_I2C_H
  86:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_H
  87:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
  88:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
  89:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * HEADER FILES
  90:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
  91:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
  92:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #include "xmc_usic.h"
  93:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
  94:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
  95:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup XMClib XMC Peripheral Library
  96:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
  97:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  98:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 100:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup I2C
 101:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief Inter Integrated Circuit(IIC) driver for the XMC microcontroller family. 
 102:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 103:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * USIC IIC Features: <br>
 104:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *  * Two-wire interface, with one line for shift clock transfer and synchronization (shift clock S
 105:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Communication in standard mode (100 kBit/s) or in fast mode (up to 400 kBit/s) <br>
 106:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Support of 7-bit addressing, as well as 10-bit addressing <br>
 107:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Master mode operation, where the IIC controls the bus transactions and provides the clock sign
 108:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Slave mode operation, where an external master controls the bus transactions and provides the 
 109:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Multi-master mode operation, where several masters can be connected to the bus and bus arbitra
 110:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 	  The master/slave operation of an IIC bus participant can change from frame to frame. <br>
 111:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Efficient frame handling (low software effort), also allowing DMA transfers <br>
 112:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Powerful interrupt handling due to multitude of indication flags <br>
 113:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 114:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 115:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 116:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 117:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * MACROS
 118:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 119:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 120:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC0)
 121:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
 122:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
 123:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 124:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 125:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC1)
 126:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
 128:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 129:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 130:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC2)
 131:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 133:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 134:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 135:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_10BIT_ADDR_GROUP       (0x7800U)	 /**< Value to verify the address is 10-bit or not
 136:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 137:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 138:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * ENUMS
 139:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 140:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 141:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 142:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C Status
 143:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 144:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS
 145:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 146:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_OK,      /**< Status OK */
 147:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_ERROR,   /**< Status ERROR */
 148:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_BUSY     /**< Status BUSY */
 149:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_t;
 150:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 152:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C status
 153:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 154:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS_FLAG
 155:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 156:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_SELECT = USIC_CH_PSR_IICMode_SLSEL_Msk,                     /**< Sla
 157:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND = USIC_CH_PSR_IICMode_WTDF_Msk,              /**< Wro
 158:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_SCR_Msk,           /**< Sta
 159:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_RSCR_Msk, /**< Rep
 160:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_PCR_Msk,            /**< Sto
 161:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED = USIC_CH_PSR_IICMode_NACK_Msk,                     /**< NAC
 162:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST = USIC_CH_PSR_IICMode_ARL_Msk,                   /**< Arb
 163:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_READ_REQUESTED = USIC_CH_PSR_IICMode_SRR_Msk,               /**< Sla
 164:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ERROR = USIC_CH_PSR_IICMode_ERR_Msk,                              /**< Err
 165:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED = USIC_CH_PSR_IICMode_ACK_Msk,                       /**< ACK
 166:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IICMode_RSIF_Msk,         /**< Rec
 167:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IICMode_DLIF_Msk,              /**< Dat
 168:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IICMode_TSIF_Msk,         /**< Tra
 169:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IICMode_TBIF_Msk,        /**< Tra
 170:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_RIF_Msk,                 /**< Rec
 171:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_AIF_Msk,     /**< Alt
 172:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IICMode_BRGIF_Msk    /**< Bau
 173:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_FLAG_t;
 174:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 175:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 176:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C receiver status. The received data byte is available at the bit
 177:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * positions RBUF[7:0], whereas the additional information is monitored at the bit positions
 178:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** *  RBUF[12:8].
 179:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_RECEIVER_STATUS_FLAG
 181:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 182:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ACK = 0x1U,      /**< Bit 8:  Value of Received Acknowledgement b
 183:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_FIN = 0x2U,      /**< Bit 9:  A 1 at this bit position indicates 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 followed by the address reception t
 185:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 been received. A 0 at this bit posi
 186:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_MODE = 0x4U,     /**< Bit 10: A 0 at this bit position indicates 
 187:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 when the device has been in slave m
 188:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ERR = 0x8U,      /**< Bit 11: A 1 at this bit position indicates 
 189:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 data byte in the receive buffer */
 190:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ADR = 0x10       /**< Bit 12: A 0 at this bit position indicates 
 191:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 has been received. A 1 indicates a 
 192:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_RECEIVER_STATUS_FLAG_t;
 193:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 194:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 195:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C commands
 196:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 197:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_CMD
 198:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 199:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_WRITE,                            /**< I2C Command Write */
 200:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_READ                              /**< I2C Command Read */
 201:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CMD_t;
 202:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 203:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 204:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C events
 205:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 206:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_EVENT
 207:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 208:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 211:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 212:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 213:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 214:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 215:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 216:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_SCRIEN_Msk,             /**< Star
 217:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_RSCRIEN_Msk,   /**< Repe
 218:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STOP_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_PCRIEN_Msk,              /**< Stop
 219:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_NACK = USIC_CH_PCR_IICMode_NACKIEN_Msk,                                /**< NACK
 220:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ARBITRATION_LOST = USIC_CH_PCR_IICMode_ARLIEN_Msk,                     /**< Arbi
 221:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_SLAVE_READ_REQUEST = USIC_CH_PCR_IICMode_SRRIEN_Msk,                   /**< Slav
 222:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ERROR = USIC_CH_PCR_IICMode_ERRIEN_Msk,	                              /**< Error
 223:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ACK = USIC_CH_PCR_IICMode_ACKIEN_Msk                                   /**< ACK 
 224:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_EVENT_t;
 225:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 226:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 227:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C input stage selection
 228:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 229:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INPUT
 230:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 231:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA = 0U,   /**< selection of sda input stage */
 232:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 233:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA1 = 3U,
 234:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA2 = 5U,
 235:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #endif  
 236:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL = 1U,  /**< selection of scl input stage */
 237:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 238:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL1 = 4U
 239:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #endif  
 240:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INPUT_t;
 241:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 243:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * I2C channel interrupt node pointers
 244:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 245:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INTERRUPT_NODE_POINTER
 246:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 247:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 248:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 249:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 250:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 251:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 252:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INTERRUPT_NODE_POINTER_t;
 253:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 254:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 255:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * DATA STRUCTURES
 256:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 257:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 258:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C_CH configuration structure
 259:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 260:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** typedef struct XMC_I2C_CH_CONFIG
 261:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 262:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   uint32_t baudrate;   /**< baud rate configuration upto max of 400KHz */
 263:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   bool normal_divider_mode; /**< Selects normal divider mode for baudrate generator instead of defa
 264:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   uint16_t address;    /**< slave address 
 265:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 7-bit address needs to be left shifted it by 1.
 266:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 10-bit address needs to be ORed with XMC_I2C_10BIT_ADDR_GROUP. */
 267:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CONFIG_t;
 268:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 269:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 270:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * API PROTOTYPES
 271:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 272:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 273:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #ifdef __cplusplus
 274:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** extern "C" {
 275:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 276:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 277:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 278:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 279:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 280:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 281:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 282:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 283:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 284:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 285:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 286:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 287:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 288:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 289:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 290:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 291:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 292:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 293:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 294:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config);
 295:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 296:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 297:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 298:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 299:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 300:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 301:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 302:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 303:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 304:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 305:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 306:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 307:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 308:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 309:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 310:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 311:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 312:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 313:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 314:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 315:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 316:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 317:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 318:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 319:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 320:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 321:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 322:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 323:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 324:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 325:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 326:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 327:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 328:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 329:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, bool norm
 330:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 332:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 333:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 334:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 335:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 336:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 337:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C \a channel.
 338:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 339:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 340:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation mode to I2C mode using CCR register.
 341:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 342:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 343:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 344:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 345:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Start(XMC_USIC_CH_t *const channel)
 346:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 347:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2C);
 348:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** }
 349:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 350:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 351:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 352:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 353:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return @ref XMC_I2C_CH_STATUS_t<br>
 354:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 355:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 356:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C \a channel.<br>
 357:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 358:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 359:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation to IDLE mode using CCR register.
 360:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 361:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 362:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 363:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 364:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel);
 365:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 366:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 367:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 368:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number in the range of 0-5
 369:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 370:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 371:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 372:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for protocol interrupt.<br>
 373:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 374:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 375:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * To generate interrupt for an event, node pointer should be configured with service request numbe
 376:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 377:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 378:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 379:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * NVIC node should be separately enabled to generate the interrupt. After setting the node pointer
 380:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 381:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 382:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent(), NVIC_SetPriority(), NVIC_EnableIRQ(), XMC_I2C_CH_SetInputSource()<br>
 383:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 384:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 385:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****                                                         const uint8_t service_request)
 386:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 387:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, service
 388:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** }
 389:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 390:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 391:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 392:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 393:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				  \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref XM
 394:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 395:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: @ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 396:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  			@ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 397:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number.\n
 398:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: 0 to 5.
 399:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 400:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 401:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 402:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for USIC channel events. \n\n
 403:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 404:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 405:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 406:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 407:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 408:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent() \n\n\n
 409:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 410:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 411:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****                                                            const XMC_I2C_CH_INTERRUPT_NODE_POINTER_
 412:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****                                                            const uint32_t service_request)
 413:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 414:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 415:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 		                                       (uint32_t)service_request);
 416:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** }
 417:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 418:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 419:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 420:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				   \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref X
 421:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 422:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 			\b Range: 0 to 5.
 423:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 424:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 425:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 426:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Trigger a I2C interrupt service request.\n\n
 427:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * When the I2C service request is triggered, the NVIC interrupt associated with it will be
 428:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * generated if enabled.
 429:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 430:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 431:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SelectInterruptNodePointer() \n\n\n
 432:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 433:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t 
 434:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 435:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 436:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** }
 437:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 438:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 439:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 440:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param input I2C channel input stage of type @ref XMC_I2C_CH_INPUT_t
 441:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param source Input source select for the input stage(0->DX0A, 1->DX1A, .. 7->DX7G)
 442:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 443:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 444:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 445:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the input source for I2C \a channel.<br>
 446:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Defines the input stage for the corresponding input line.
 447:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 448:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note After configuring the input source for corresponding channel, interrupt node pointer is se
 449:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 450:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 451:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetInptSource(), XMC_USIC_CH_SetInterruptNodePointer()
 452:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 453:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 454:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_INPUT
 455:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 456:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->DXCR[input] =  (uint32_t)(channel->DXCR[input] & (~USIC_CH_DX0CR_INSW_Msk)) | USIC_CH_DX
 457:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 458:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** }
 459:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 460:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 461:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 462:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param address I2C slave address
 463:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 464:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 465:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 466:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the I2C \a channel slave address.<br>
 467:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 468:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 469:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Address is set in PCR_IICMode register by checking if it is in 10-bit address group or 7-bit add
 470:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is 10-bit mode otherwis
 471:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address should include an additional bit at the LSB for read/write indication. For
 472:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. A 10-bit address should be provided with the identifier 0b11110xx at the mo
 473:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * address 0x305 should be provided as 0x7b05(bitwise OR with 0x7800).
 474:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 475:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 476:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetSlaveAddress()\n\n
 477:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 478:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address);
 479:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 480:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 481:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel handler of type @ref XMC_USIC_CH_t
 482:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint16_t Slave address<br>
 483:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 484:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 485:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the I2C \a channel slave address.<br>
 486:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 487:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 488:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Returns the address using PCR_IICMode register by checking if it is in 10-bit address group or 7
 489:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is considered as 10-bit
 490:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address will include an additional bit at the LSB. For example, address 0x05 will 
 491:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * 10-bit address will not include the 10-bit address identifier 0b11110xx at the most signifcant b
 492:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 493:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 494:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SetSlaveAddress()\n\n
 495:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 496:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel);
 497:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 498:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 499:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 500:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 501:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 502:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 503:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 504:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 505:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C master \a channel.<br>
 506:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 507:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 508:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Start condition with read/write command by updating IN/TBUF register based on FIFO/non
 509:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 510:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 511:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 512:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 513:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 514:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 515:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 516:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 517:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 518:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 519:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 520:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 521:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 522:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 523:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 524:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 525:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 526:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition from I2C master \a channel.<br>
 527:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 528:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 529:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition with read/write command by updating IN/TBUF register based on
 530:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 531:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 532:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 533:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 534:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 535:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 536:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 537:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 538:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 539:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 540:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 541:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 542:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 543:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 544:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 545:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C master \a channel.<br>
 546:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 547:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 548:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on F
 549:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 550:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 551:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 552:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 553:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel);
 554:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 555:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 556:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 557:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 558:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 559:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 560:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 561:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C master \a channel.<br>
 562:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 563:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 564:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 565:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 566:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 567:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 568:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 569:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 570:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 571:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 572:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 573:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 574:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 575:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 576:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 577:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C slave \a channel.<br>
 578:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 579:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 580:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 581:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 582:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 583:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(),XMC_I2C_CH_ClearStatusFlag()\n\n
 584:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 585:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 586:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 587:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 588:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 589:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 590:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 591:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 592:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Ack request from I2C master \a channel.<br>
 593:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 594:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 595:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FIF
 596:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 597:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 598:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 599:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 600:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel);
 601:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 602:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 603:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 604:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 605:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 606:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 607:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Nack request from I2C master \a channel.<br>
 608:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 609:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 610:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 611:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 612:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 613:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 614:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 615:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel);
 616:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 617:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 618:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 619:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t OUTR/RBUF register data<br>
 620:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 621:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 622:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the data from I2C \a channel.<br>
 623:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 624:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 625:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Data is read by using OUTR/RBUF register based on FIFO/non-FIFO modes.
 626:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 627:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 628:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 629:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 630:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel);
 631:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 632:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 633:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 634:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t Receiver status flag<br>
 635:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 636:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 637:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the receiver status of I2C \a channel using RBUF register of bits 8-12 which gives informat
 638:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 639:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 640:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 641:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 642:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint8_t XMC_I2C_CH_GetReceiverStatusFlag(XMC_USIC_CH_t *const channel)
 643:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 644:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   return((uint8_t)((channel->RBUF) >> 8U));
 645:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** }
 646:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 647:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 648:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 649:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 650:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 651:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 652:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 653:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Enables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 654:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 655:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 656:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_DisableEvent()\n\n
 657:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 658:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 659:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 660:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 661:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 662:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 663:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 664:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 665:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 666:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Disables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 667:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 668:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 669:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent()\n\n
 670:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 671:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 672:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 673:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 674:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 675:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint32_t Status byte<br>
 676:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 677:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 678:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Retrieves the status byte of I2C \a channel using PSR_IICMode register.\n
 679:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 680:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 681:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_ClearStatusFlag()\n\n
 682:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 683:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint32_t XMC_I2C_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 684:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 685:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   return (channel->PSR_IICMode);
 686:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** }
 687:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** 
 688:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 689:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 690:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param flag Status flag
 691:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 692:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 693:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 694:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * Clears the status flag of I2C \a channel by setting the input parameter \a flag in PSCR register
 695:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 696:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 697:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetStatusFlag()\n\n
 698:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 699:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, uint32_t flag)
 700:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** {
 123              	 .loc 2 700 0
 124              	 .cfi_startproc
 125              	 
 126              	 
 127              	 
 128 0000 80B4     	 push {r7}
 129              	.LCFI12:
 130              	 .cfi_def_cfa_offset 4
 131              	 .cfi_offset 7,-4
 132 0002 83B0     	 sub sp,sp,#12
 133              	.LCFI13:
 134              	 .cfi_def_cfa_offset 16
 135 0004 00AF     	 add r7,sp,#0
 136              	.LCFI14:
 137              	 .cfi_def_cfa_register 7
 138 0006 7860     	 str r0,[r7,#4]
 139 0008 3960     	 str r1,[r7]
 701:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->PSCR |= flag;
 140              	 .loc 2 701 0
 141 000a 7B68     	 ldr r3,[r7,#4]
 142 000c DA6C     	 ldr r2,[r3,#76]
 143 000e 3B68     	 ldr r3,[r7]
 144 0010 1A43     	 orrs r2,r2,r3
 145 0012 7B68     	 ldr r3,[r7,#4]
 146 0014 DA64     	 str r2,[r3,#76]
 702:C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/XMCLib/inc\xmc_i2c.h **** }
 147              	 .loc 2 702 0
 148 0016 0C37     	 adds r7,r7,#12
 149              	.LCFI15:
 150              	 .cfi_def_cfa_offset 4
 151 0018 BD46     	 mov sp,r7
 152              	.LCFI16:
 153              	 .cfi_def_cfa_register 13
 154              	 
 155 001a 5DF8047B 	 ldr r7,[sp],#4
 156              	.LCFI17:
 157              	 .cfi_restore 7
 158              	 .cfi_def_cfa_offset 0
 159 001e 7047     	 bx lr
 160              	 .cfi_endproc
 161              	.LFE204:
 163              	 .section .text.XMC_I2C_CH_Init,"ax",%progbits
 164              	 .align 2
 165              	 .global XMC_I2C_CH_Init
 166              	 .thumb
 167              	 .thumb_func
 169              	XMC_I2C_CH_Init:
 170              	.LFB212:
 171              	 .file 3 "../Libraries/XMCLib/src/xmc_i2c.c"
   1:../Libraries/XMCLib/src/xmc_i2c.c **** /**
   2:../Libraries/XMCLib/src/xmc_i2c.c ****  * @file xmc_i2c.c
   3:../Libraries/XMCLib/src/xmc_i2c.c ****  * @date 2019-05-07
   4:../Libraries/XMCLib/src/xmc_i2c.c ****  *
   5:../Libraries/XMCLib/src/xmc_i2c.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_i2c.c ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_i2c.c ****  *
   9:../Libraries/XMCLib/src/xmc_i2c.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_i2c.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_i2c.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_i2c.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_i2c.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_i2c.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_i2c.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_i2c.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_i2c.c ****  * 
  18:../Libraries/XMCLib/src/xmc_i2c.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_i2c.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_i2c.c ****  * 
  21:../Libraries/XMCLib/src/xmc_i2c.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_i2c.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_i2c.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_i2c.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_i2c.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_i2c.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_i2c.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_i2c.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_i2c.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_i2c.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_i2c.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_i2c.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_i2c.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  36:../Libraries/XMCLib/src/xmc_i2c.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_i2c.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  39:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_i2c.c ****  *      
  42:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc_i2c.c ****        - Modified XMC_I2C_CH_Stop() API for not setting to IDLE the channel if it is busy <br>
  44:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  45:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-06-20:
  46:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Removed GetDriverVersion API <br>
  47:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  48:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-08-14:
  49:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - updated the XMC_I2C_CH_SetBaudrate API to support dynamic change from 400K to low frequenc
  50:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  51:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-09-01:
  52:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Modified XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_DisableEvent() for supporting multiple ev
  53:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  54:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-10-02:
  55:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Fixed 10bit addressing
  56:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  57:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2019-05-07:
  58:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Added XMC_I2C_CH_SetBaudrateEx() which allows to select between baudrate generator normal 
  59:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  60:../Libraries/XMCLib/src/xmc_i2c.c ****  * @endcond 
  61:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  62:../Libraries/XMCLib/src/xmc_i2c.c ****  */
  63:../Libraries/XMCLib/src/xmc_i2c.c **** 
  64:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  65:../Libraries/XMCLib/src/xmc_i2c.c ****  * HEADER FILES
  66:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_i2c.c **** #include <xmc_i2c.h>
  68:../Libraries/XMCLib/src/xmc_i2c.c **** 
  69:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  70:../Libraries/XMCLib/src/xmc_i2c.c ****  * MACROS
  71:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_i2c.c **** #define XMC_I2C_7BIT_ADDR_Pos   (8U)		/**< 7-bit address position */
  73:../Libraries/XMCLib/src/xmc_i2c.c **** #define TRANSMISSION_MODE       (3U)		/**< The shift control signal is considered active
  74:../Libraries/XMCLib/src/xmc_i2c.c ****                                                  without referring to the actual signal level. Data
  75:../Libraries/XMCLib/src/xmc_i2c.c ****                                                  frame transfer is possible after each edge of the 
  76:../Libraries/XMCLib/src/xmc_i2c.c **** #define WORDLENGTH              (7U)        /**< Word length */
  77:../Libraries/XMCLib/src/xmc_i2c.c **** #define SET_TDV                 (1U)		/**< Transmission data valid */
  78:../Libraries/XMCLib/src/xmc_i2c.c **** #define XMC_I2C_10BIT_ADDR_MASK (0x7C00U)   /**< Address mask for 10-bit mode */
  79:../Libraries/XMCLib/src/xmc_i2c.c **** 
  80:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  81:../Libraries/XMCLib/src/xmc_i2c.c ****  * ENUMS
  82:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  83:../Libraries/XMCLib/src/xmc_i2c.c **** 
  84:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_TDF
  85:../Libraries/XMCLib/src/xmc_i2c.c **** {
  86:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_SEND =         0U,
  87:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_SLAVE_SEND =          (uint32_t)1U << 8U,
  88:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK =  (uint32_t)2U << 8U,
  89:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK = (uint32_t)3U << 8U,
  90:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_START =        (uint32_t)4U << 8U,
  91:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RESTART =      (uint32_t)5U << 8U,
  92:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_STOP =         (uint32_t)6U << 8U
  93:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_TDF_t;
  94:../Libraries/XMCLib/src/xmc_i2c.c **** 
  95:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_MAX_SPEED
  96:../Libraries/XMCLib/src/xmc_i2c.c **** {
  97:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_MAX_SPEED_STANDARD = 100000U,
  98:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_MAX_SPEED_FAST = 400000U
  99:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_MAX_SPEED_t;
 100:../Libraries/XMCLib/src/xmc_i2c.c **** 
 101:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_CLOCK_OVERSAMPLING
 102:../Libraries/XMCLib/src/xmc_i2c.c **** {
 103:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_CLOCK_OVERSAMPLING_STANDARD = 10U,
 104:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_CLOCK_OVERSAMPLING_FAST     = 25U
 105:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_CLOCK_OVERSAMPLINGS_t;
 106:../Libraries/XMCLib/src/xmc_i2c.c **** 
 107:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
 108:../Libraries/XMCLib/src/xmc_i2c.c ****  * API IMPLEMENTATION
 109:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
 110:../Libraries/XMCLib/src/xmc_i2c.c **** /* Initializes the USIC channel by setting the data format, slave address, baudrate, transfer buffe
 111:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config)
 112:../Libraries/XMCLib/src/xmc_i2c.c **** {
 172              	 .loc 3 112 0
 173              	 .cfi_startproc
 174              	 
 175              	 
 176 0000 80B5     	 push {r7,lr}
 177              	.LCFI18:
 178              	 .cfi_def_cfa_offset 8
 179              	 .cfi_offset 7,-8
 180              	 .cfi_offset 14,-4
 181 0002 82B0     	 sub sp,sp,#8
 182              	.LCFI19:
 183              	 .cfi_def_cfa_offset 16
 184 0004 00AF     	 add r7,sp,#0
 185              	.LCFI20:
 186              	 .cfi_def_cfa_register 7
 187 0006 7860     	 str r0,[r7,#4]
 188 0008 3960     	 str r1,[r7]
 113:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_USIC_CH_Enable(channel);
 189              	 .loc 3 113 0
 190 000a 7868     	 ldr r0,[r7,#4]
 191 000c FFF7FEFF 	 bl XMC_USIC_CH_Enable
 114:../Libraries/XMCLib/src/xmc_i2c.c ****   
 115:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Data format configuration */
 116:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->SCTR = ((uint32_t)TRANSMISSION_MODE << (uint32_t)USIC_CH_SCTR_TRM_Pos) | /* Transmision 
 192              	 .loc 3 116 0
 193 0010 7B68     	 ldr r3,[r7,#4]
 194 0012 0F4A     	 ldr r2,.L6
 195 0014 5A63     	 str r2,[r3,#52]
 117:../Libraries/XMCLib/src/xmc_i2c.c ****                   ((uint32_t)WORDLENGTH << (uint32_t)USIC_CH_SCTR_WLE_Pos) | /* 8 data bits */
 118:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_FLE_Msk |           /* unlimited data flow */
 119:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_SDIR_Msk |          /* MSB shifted first */
 120:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_PDL_Msk;            /* Passive Data Level */
 121:../Libraries/XMCLib/src/xmc_i2c.c **** 
 122:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_SetSlaveAddress(channel, config->address);
 196              	 .loc 3 122 0
 197 0016 3B68     	 ldr r3,[r7]
 198 0018 DB88     	 ldrh r3,[r3,#6]
 199 001a 7868     	 ldr r0,[r7,#4]
 200 001c 1946     	 mov r1,r3
 201 001e FFF7FEFF 	 bl XMC_I2C_CH_SetSlaveAddress
 123:../Libraries/XMCLib/src/xmc_i2c.c ****   (void)XMC_I2C_CH_SetBaudrateEx(channel, config->baudrate, config->normal_divider_mode);
 202              	 .loc 3 123 0
 203 0022 3B68     	 ldr r3,[r7]
 204 0024 1A68     	 ldr r2,[r3]
 205 0026 3B68     	 ldr r3,[r7]
 206 0028 1B79     	 ldrb r3,[r3,#4]
 207 002a 7868     	 ldr r0,[r7,#4]
 208 002c 1146     	 mov r1,r2
 209 002e 1A46     	 mov r2,r3
 210 0030 FFF7FEFF 	 bl XMC_I2C_CH_SetBaudrateEx
 124:../Libraries/XMCLib/src/xmc_i2c.c ****   
 125:../Libraries/XMCLib/src/xmc_i2c.c ****     
 126:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Enable transfer buffer */
 127:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->TCSR = ((uint32_t)SET_TDV << (uint32_t)USIC_CH_TCSR_TDEN_Pos) | USIC_CH_TCSR_TDSSM_Msk;
 211              	 .loc 3 127 0
 212 0034 7B68     	 ldr r3,[r7,#4]
 213 0036 4FF4A062 	 mov r2,#1280
 214 003a 9A63     	 str r2,[r3,#56]
 128:../Libraries/XMCLib/src/xmc_i2c.c **** 
 129:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Clear status flags */
 130:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PSCR = 0xFFFFFFFFU;
 215              	 .loc 3 130 0
 216 003c 7B68     	 ldr r3,[r7,#4]
 217 003e 4FF0FF32 	 mov r2,#-1
 218 0042 DA64     	 str r2,[r3,#76]
 131:../Libraries/XMCLib/src/xmc_i2c.c **** 
 132:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Disable parity generation */
 133:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR = 0x0U;
 219              	 .loc 3 133 0
 220 0044 7B68     	 ldr r3,[r7,#4]
 221 0046 0022     	 movs r2,#0
 222 0048 1A64     	 str r2,[r3,#64]
 134:../Libraries/XMCLib/src/xmc_i2c.c **** }
 223              	 .loc 3 134 0
 224 004a 0837     	 adds r7,r7,#8
 225              	.LCFI21:
 226              	 .cfi_def_cfa_offset 8
 227 004c BD46     	 mov sp,r7
 228              	.LCFI22:
 229              	 .cfi_def_cfa_register 13
 230              	 
 231 004e 80BD     	 pop {r7,pc}
 232              	.L7:
 233              	 .align 2
 234              	.L6:
 235 0050 03033F07 	 .word 121570051
 236              	 .cfi_endproc
 237              	.LFE212:
 239              	 .section .text.XMC_I2C_CH_SetSlaveAddress,"ax",%progbits
 240              	 .align 2
 241              	 .global XMC_I2C_CH_SetSlaveAddress
 242              	 .thumb
 243              	 .thumb_func
 245              	XMC_I2C_CH_SetSlaveAddress:
 246              	.LFB213:
 135:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the slave address */
 136:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address)
 137:../Libraries/XMCLib/src/xmc_i2c.c **** {
 247              	 .loc 3 137 0
 248              	 .cfi_startproc
 249              	 
 250              	 
 251              	 
 252 0000 80B4     	 push {r7}
 253              	.LCFI23:
 254              	 .cfi_def_cfa_offset 4
 255              	 .cfi_offset 7,-4
 256 0002 83B0     	 sub sp,sp,#12
 257              	.LCFI24:
 258              	 .cfi_def_cfa_offset 16
 259 0004 00AF     	 add r7,sp,#0
 260              	.LCFI25:
 261              	 .cfi_def_cfa_register 7
 262 0006 7860     	 str r0,[r7,#4]
 263 0008 0B46     	 mov r3,r1
 264 000a 7B80     	 strh r3,[r7,#2]
 138:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((address & XMC_I2C_10BIT_ADDR_MASK) == XMC_I2C_10BIT_ADDR_GROUP)
 265              	 .loc 3 138 0
 266 000c 7B88     	 ldrh r3,[r7,#2]
 267 000e 03F4F843 	 and r3,r3,#31744
 268 0012 B3F5F04F 	 cmp r3,#30720
 269 0016 09D1     	 bne .L9
 139:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 140:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode = (address & 0xffU) | ((address << 1) & 0xfe00U);
 270              	 .loc 3 140 0
 271 0018 7B88     	 ldrh r3,[r7,#2]
 272 001a DAB2     	 uxtb r2,r3
 273 001c 7B88     	 ldrh r3,[r7,#2]
 274 001e 5B00     	 lsls r3,r3,#1
 275 0020 03F47E43 	 and r3,r3,#65024
 276 0024 1A43     	 orrs r2,r2,r3
 277 0026 7B68     	 ldr r3,[r7,#4]
 278 0028 DA63     	 str r2,[r3,#60]
 279 002a 03E0     	 b .L8
 280              	.L9:
 141:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 142:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 143:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 144:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode = ((uint32_t)address) << XMC_I2C_7BIT_ADDR_Pos;
 281              	 .loc 3 144 0
 282 002c 7B88     	 ldrh r3,[r7,#2]
 283 002e 1A02     	 lsls r2,r3,#8
 284 0030 7B68     	 ldr r3,[r7,#4]
 285 0032 DA63     	 str r2,[r3,#60]
 286              	.L8:
 145:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 146:../Libraries/XMCLib/src/xmc_i2c.c **** }
 287              	 .loc 3 146 0
 288 0034 0C37     	 adds r7,r7,#12
 289              	.LCFI26:
 290              	 .cfi_def_cfa_offset 4
 291 0036 BD46     	 mov sp,r7
 292              	.LCFI27:
 293              	 .cfi_def_cfa_register 13
 294              	 
 295 0038 5DF8047B 	 ldr r7,[sp],#4
 296              	.LCFI28:
 297              	 .cfi_restore 7
 298              	 .cfi_def_cfa_offset 0
 299 003c 7047     	 bx lr
 300              	 .cfi_endproc
 301              	.LFE213:
 303 003e 00BF     	 .section .text.XMC_I2C_CH_GetSlaveAddress,"ax",%progbits
 304              	 .align 2
 305              	 .global XMC_I2C_CH_GetSlaveAddress
 306              	 .thumb
 307              	 .thumb_func
 309              	XMC_I2C_CH_GetSlaveAddress:
 310              	.LFB214:
 147:../Libraries/XMCLib/src/xmc_i2c.c **** /* Read the slave address */
 148:../Libraries/XMCLib/src/xmc_i2c.c **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel)
 149:../Libraries/XMCLib/src/xmc_i2c.c **** {
 311              	 .loc 3 149 0
 312              	 .cfi_startproc
 313              	 
 314              	 
 315              	 
 316 0000 80B4     	 push {r7}
 317              	.LCFI29:
 318              	 .cfi_def_cfa_offset 4
 319              	 .cfi_offset 7,-4
 320 0002 85B0     	 sub sp,sp,#20
 321              	.LCFI30:
 322              	 .cfi_def_cfa_offset 24
 323 0004 00AF     	 add r7,sp,#0
 324              	.LCFI31:
 325              	 .cfi_def_cfa_register 7
 326 0006 7860     	 str r0,[r7,#4]
 150:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t address = channel->PCR_IICMode & (uint32_t)USIC_CH_PCR_IICMode_SLAD_Msk;
 327              	 .loc 3 150 0
 328 0008 7B68     	 ldr r3,[r7,#4]
 329 000a DB6B     	 ldr r3,[r3,#60]
 330 000c 9BB2     	 uxth r3,r3
 331 000e FB60     	 str r3,[r7,#12]
 151:../Libraries/XMCLib/src/xmc_i2c.c ****   
 152:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((address & 0xffU) == 0U)
 332              	 .loc 3 152 0
 333 0010 FB68     	 ldr r3,[r7,#12]
 334 0012 DBB2     	 uxtb r3,r3
 335 0014 002B     	 cmp r3,#0
 336 0016 03D1     	 bne .L12
 153:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 154:../Libraries/XMCLib/src/xmc_i2c.c ****     address = address >> XMC_I2C_7BIT_ADDR_Pos;
 337              	 .loc 3 154 0
 338 0018 FB68     	 ldr r3,[r7,#12]
 339 001a 1B0A     	 lsrs r3,r3,#8
 340 001c FB60     	 str r3,[r7,#12]
 341 001e 07E0     	 b .L13
 342              	.L12:
 155:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 156:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 157:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 158:../Libraries/XMCLib/src/xmc_i2c.c ****     address = (address & 0xffU) | ((address >> 1) & 0x0300U);
 343              	 .loc 3 158 0
 344 0020 FB68     	 ldr r3,[r7,#12]
 345 0022 DAB2     	 uxtb r2,r3
 346 0024 FB68     	 ldr r3,[r7,#12]
 347 0026 5B08     	 lsrs r3,r3,#1
 348 0028 03F44073 	 and r3,r3,#768
 349 002c 1343     	 orrs r3,r3,r2
 350 002e FB60     	 str r3,[r7,#12]
 351              	.L13:
 159:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 160:../Libraries/XMCLib/src/xmc_i2c.c ****   
 161:../Libraries/XMCLib/src/xmc_i2c.c ****   return (uint16_t)address;
 352              	 .loc 3 161 0
 353 0030 FB68     	 ldr r3,[r7,#12]
 354 0032 9BB2     	 uxth r3,r3
 162:../Libraries/XMCLib/src/xmc_i2c.c **** }
 355              	 .loc 3 162 0
 356 0034 1846     	 mov r0,r3
 357 0036 1437     	 adds r7,r7,#20
 358              	.LCFI32:
 359              	 .cfi_def_cfa_offset 4
 360 0038 BD46     	 mov sp,r7
 361              	.LCFI33:
 362              	 .cfi_def_cfa_register 13
 363              	 
 364 003a 5DF8047B 	 ldr r7,[sp],#4
 365              	.LCFI34:
 366              	 .cfi_restore 7
 367              	 .cfi_def_cfa_offset 0
 368 003e 7047     	 bx lr
 369              	 .cfi_endproc
 370              	.LFE214:
 372              	 .section .text.XMC_I2C_CH_SetBaudrate,"ax",%progbits
 373              	 .align 2
 374              	 .global XMC_I2C_CH_SetBaudrate
 375              	 .thumb
 376              	 .thumb_func
 378              	XMC_I2C_CH_SetBaudrate:
 379              	.LFB215:
 163:../Libraries/XMCLib/src/xmc_i2c.c **** 
 164:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the baudrate and oversampling based on standard speed or fast speed */
 165:../Libraries/XMCLib/src/xmc_i2c.c **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate)
 166:../Libraries/XMCLib/src/xmc_i2c.c **** {
 380              	 .loc 3 166 0
 381              	 .cfi_startproc
 382              	 
 383              	 
 384 0000 80B5     	 push {r7,lr}
 385              	.LCFI35:
 386              	 .cfi_def_cfa_offset 8
 387              	 .cfi_offset 7,-8
 388              	 .cfi_offset 14,-4
 389 0002 84B0     	 sub sp,sp,#16
 390              	.LCFI36:
 391              	 .cfi_def_cfa_offset 24
 392 0004 00AF     	 add r7,sp,#0
 393              	.LCFI37:
 394              	 .cfi_def_cfa_register 7
 395 0006 7860     	 str r0,[r7,#4]
 396 0008 3960     	 str r1,[r7]
 167:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_STATUS_t status;
 168:../Libraries/XMCLib/src/xmc_i2c.c ****   
 169:../Libraries/XMCLib/src/xmc_i2c.c ****   status = XMC_I2C_CH_STATUS_ERROR;
 397              	 .loc 3 169 0
 398 000a 0123     	 movs r3,#1
 399 000c FB73     	 strb r3,[r7,#15]
 170:../Libraries/XMCLib/src/xmc_i2c.c ****   
 171:../Libraries/XMCLib/src/xmc_i2c.c ****   if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_STANDARD)
 400              	 .loc 3 171 0
 401 000e 3B68     	 ldr r3,[r7]
 402 0010 174A     	 ldr r2,.L22
 403 0012 9342     	 cmp r3,r2
 404 0014 10D8     	 bhi .L16
 172:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 173:../Libraries/XMCLib/src/xmc_i2c.c **** 	channel->PCR_IICMode &= (uint32_t)~USIC_CH_PCR_IICMode_STIM_Msk;
 405              	 .loc 3 173 0
 406 0016 7B68     	 ldr r3,[r7,#4]
 407 0018 DB6B     	 ldr r3,[r3,#60]
 408 001a 23F40032 	 bic r2,r3,#131072
 409 001e 7B68     	 ldr r3,[r7,#4]
 410 0020 DA63     	 str r2,[r3,#60]
 174:../Libraries/XMCLib/src/xmc_i2c.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STANDARD) ==
 411              	 .loc 3 174 0
 412 0022 7868     	 ldr r0,[r7,#4]
 413 0024 3968     	 ldr r1,[r7]
 414 0026 0A22     	 movs r2,#10
 415 0028 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 416 002c 0346     	 mov r3,r0
 417 002e 002B     	 cmp r3,#0
 418 0030 19D1     	 bne .L18
 175:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 176:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_I2C_CH_STATUS_OK;
 419              	 .loc 3 176 0
 420 0032 0023     	 movs r3,#0
 421 0034 FB73     	 strb r3,[r7,#15]
 422 0036 16E0     	 b .L18
 423              	.L16:
 177:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 178:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 179:../Libraries/XMCLib/src/xmc_i2c.c ****   else if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_FAST)
 424              	 .loc 3 179 0
 425 0038 3B68     	 ldr r3,[r7]
 426 003a 0E4A     	 ldr r2,.L22+4
 427 003c 9342     	 cmp r3,r2
 428 003e 10D8     	 bhi .L19
 180:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 181:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode |= (uint32_t)USIC_CH_PCR_IICMode_STIM_Msk;
 429              	 .loc 3 181 0
 430 0040 7B68     	 ldr r3,[r7,#4]
 431 0042 DB6B     	 ldr r3,[r3,#60]
 432 0044 43F40032 	 orr r2,r3,#131072
 433 0048 7B68     	 ldr r3,[r7,#4]
 434 004a DA63     	 str r2,[r3,#60]
 182:../Libraries/XMCLib/src/xmc_i2c.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_FAST) == XMC
 435              	 .loc 3 182 0
 436 004c 7868     	 ldr r0,[r7,#4]
 437 004e 3968     	 ldr r1,[r7]
 438 0050 1922     	 movs r2,#25
 439 0052 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 440 0056 0346     	 mov r3,r0
 441 0058 002B     	 cmp r3,#0
 442 005a 04D1     	 bne .L18
 183:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 184:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_I2C_CH_STATUS_OK;
 443              	 .loc 3 184 0
 444 005c 0023     	 movs r3,#0
 445 005e FB73     	 strb r3,[r7,#15]
 446 0060 01E0     	 b .L18
 447              	.L19:
 185:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 186:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 187:../Libraries/XMCLib/src/xmc_i2c.c ****   else 
 188:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 189:../Libraries/XMCLib/src/xmc_i2c.c ****     status = XMC_I2C_CH_STATUS_ERROR;
 448              	 .loc 3 189 0
 449 0062 0123     	 movs r3,#1
 450 0064 FB73     	 strb r3,[r7,#15]
 451              	.L18:
 190:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 191:../Libraries/XMCLib/src/xmc_i2c.c ****   
 192:../Libraries/XMCLib/src/xmc_i2c.c ****   return status;
 452              	 .loc 3 192 0
 453 0066 FB7B     	 ldrb r3,[r7,#15]
 193:../Libraries/XMCLib/src/xmc_i2c.c **** }
 454              	 .loc 3 193 0
 455 0068 1846     	 mov r0,r3
 456 006a 1037     	 adds r7,r7,#16
 457              	.LCFI38:
 458              	 .cfi_def_cfa_offset 8
 459 006c BD46     	 mov sp,r7
 460              	.LCFI39:
 461              	 .cfi_def_cfa_register 13
 462              	 
 463 006e 80BD     	 pop {r7,pc}
 464              	.L23:
 465              	 .align 2
 466              	.L22:
 467 0070 A0860100 	 .word 100000
 468 0074 801A0600 	 .word 400000
 469              	 .cfi_endproc
 470              	.LFE215:
 472              	 .section .text.XMC_I2C_CH_SetBaudrateEx,"ax",%progbits
 473              	 .align 2
 474              	 .global XMC_I2C_CH_SetBaudrateEx
 475              	 .thumb
 476              	 .thumb_func
 478              	XMC_I2C_CH_SetBaudrateEx:
 479              	.LFB216:
 194:../Libraries/XMCLib/src/xmc_i2c.c **** 
 195:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the baudrate and oversampling based on standard speed or fast speed */
 196:../Libraries/XMCLib/src/xmc_i2c.c **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, bool norm
 197:../Libraries/XMCLib/src/xmc_i2c.c **** {
 480              	 .loc 3 197 0
 481              	 .cfi_startproc
 482              	 
 483              	 
 484 0000 80B5     	 push {r7,lr}
 485              	.LCFI40:
 486              	 .cfi_def_cfa_offset 8
 487              	 .cfi_offset 7,-8
 488              	 .cfi_offset 14,-4
 489 0002 86B0     	 sub sp,sp,#24
 490              	.LCFI41:
 491              	 .cfi_def_cfa_offset 32
 492 0004 00AF     	 add r7,sp,#0
 493              	.LCFI42:
 494              	 .cfi_def_cfa_register 7
 495 0006 F860     	 str r0,[r7,#12]
 496 0008 B960     	 str r1,[r7,#8]
 497 000a 1346     	 mov r3,r2
 498 000c FB71     	 strb r3,[r7,#7]
 198:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_USIC_CH_STATUS_t status;
 199:../Libraries/XMCLib/src/xmc_i2c.c ****    
 200:../Libraries/XMCLib/src/xmc_i2c.c ****   if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_STANDARD)
 499              	 .loc 3 200 0
 500 000e BB68     	 ldr r3,[r7,#8]
 501 0010 1F4A     	 ldr r2,.L33
 502 0012 9342     	 cmp r3,r2
 503 0014 18D8     	 bhi .L25
 201:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 202:../Libraries/XMCLib/src/xmc_i2c.c **** 	  channel->PCR_IICMode &= (uint32_t)~USIC_CH_PCR_IICMode_STIM_Msk;
 504              	 .loc 3 202 0
 505 0016 FB68     	 ldr r3,[r7,#12]
 506 0018 DB6B     	 ldr r3,[r3,#60]
 507 001a 23F40032 	 bic r2,r3,#131072
 508 001e FB68     	 ldr r3,[r7,#12]
 509 0020 DA63     	 str r2,[r3,#60]
 203:../Libraries/XMCLib/src/xmc_i2c.c ****     if (normal_divider_mode)
 510              	 .loc 3 203 0
 511 0022 FB79     	 ldrb r3,[r7,#7]
 512 0024 002B     	 cmp r3,#0
 513 0026 07D0     	 beq .L26
 204:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 205:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrateEx(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STA
 514              	 .loc 3 205 0
 515 0028 F868     	 ldr r0,[r7,#12]
 516 002a B968     	 ldr r1,[r7,#8]
 517 002c 0A22     	 movs r2,#10
 518 002e FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrateEx
 519 0032 0346     	 mov r3,r0
 520 0034 FB75     	 strb r3,[r7,#23]
 521 0036 26E0     	 b .L28
 522              	.L26:
 206:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 207:../Libraries/XMCLib/src/xmc_i2c.c ****     else
 208:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 209:../Libraries/XMCLib/src/xmc_i2c.c ****       /* Fractional divider mode */
 210:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STAND
 523              	 .loc 3 210 0
 524 0038 F868     	 ldr r0,[r7,#12]
 525 003a B968     	 ldr r1,[r7,#8]
 526 003c 0A22     	 movs r2,#10
 527 003e FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 528 0042 0346     	 mov r3,r0
 529 0044 FB75     	 strb r3,[r7,#23]
 530 0046 1EE0     	 b .L28
 531              	.L25:
 211:../Libraries/XMCLib/src/xmc_i2c.c ****     }   
 212:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 213:../Libraries/XMCLib/src/xmc_i2c.c ****   else if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_FAST)
 532              	 .loc 3 213 0
 533 0048 BB68     	 ldr r3,[r7,#8]
 534 004a 124A     	 ldr r2,.L33+4
 535 004c 9342     	 cmp r3,r2
 536 004e 18D8     	 bhi .L29
 214:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 215:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode |= (uint32_t)USIC_CH_PCR_IICMode_STIM_Msk;
 537              	 .loc 3 215 0
 538 0050 FB68     	 ldr r3,[r7,#12]
 539 0052 DB6B     	 ldr r3,[r3,#60]
 540 0054 43F40032 	 orr r2,r3,#131072
 541 0058 FB68     	 ldr r3,[r7,#12]
 542 005a DA63     	 str r2,[r3,#60]
 216:../Libraries/XMCLib/src/xmc_i2c.c ****     if (normal_divider_mode)
 543              	 .loc 3 216 0
 544 005c FB79     	 ldrb r3,[r7,#7]
 545 005e 002B     	 cmp r3,#0
 546 0060 07D0     	 beq .L30
 217:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 218:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrateEx(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STA
 547              	 .loc 3 218 0
 548 0062 F868     	 ldr r0,[r7,#12]
 549 0064 B968     	 ldr r1,[r7,#8]
 550 0066 0A22     	 movs r2,#10
 551 0068 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrateEx
 552 006c 0346     	 mov r3,r0
 553 006e FB75     	 strb r3,[r7,#23]
 554 0070 09E0     	 b .L28
 555              	.L30:
 219:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 220:../Libraries/XMCLib/src/xmc_i2c.c ****     else
 221:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 222:../Libraries/XMCLib/src/xmc_i2c.c ****       /* Fractional divider mode */
 223:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STAND
 556              	 .loc 3 223 0
 557 0072 F868     	 ldr r0,[r7,#12]
 558 0074 B968     	 ldr r1,[r7,#8]
 559 0076 0A22     	 movs r2,#10
 560 0078 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 561 007c 0346     	 mov r3,r0
 562 007e FB75     	 strb r3,[r7,#23]
 563 0080 01E0     	 b .L28
 564              	.L29:
 224:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 225:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 226:../Libraries/XMCLib/src/xmc_i2c.c ****   else 
 227:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 228:../Libraries/XMCLib/src/xmc_i2c.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 565              	 .loc 3 228 0
 566 0082 0123     	 movs r3,#1
 567 0084 FB75     	 strb r3,[r7,#23]
 568              	.L28:
 229:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 230:../Libraries/XMCLib/src/xmc_i2c.c ****   
 231:../Libraries/XMCLib/src/xmc_i2c.c ****   return (XMC_I2C_CH_STATUS_t)status;
 569              	 .loc 3 231 0
 570 0086 FB7D     	 ldrb r3,[r7,#23]
 232:../Libraries/XMCLib/src/xmc_i2c.c **** }
 571              	 .loc 3 232 0
 572 0088 1846     	 mov r0,r3
 573 008a 1837     	 adds r7,r7,#24
 574              	.LCFI43:
 575              	 .cfi_def_cfa_offset 8
 576 008c BD46     	 mov sp,r7
 577              	.LCFI44:
 578              	 .cfi_def_cfa_register 13
 579              	 
 580 008e 80BD     	 pop {r7,pc}
 581              	.L34:
 582              	 .align 2
 583              	.L33:
 584 0090 A0860100 	 .word 100000
 585 0094 801A0600 	 .word 400000
 586              	 .cfi_endproc
 587              	.LFE216:
 589              	 .section .text.XMC_I2C_CH_MasterStart,"ax",%progbits
 590              	 .align 2
 591              	 .global XMC_I2C_CH_MasterStart
 592              	 .thumb
 593              	 .thumb_func
 595              	XMC_I2C_CH_MasterStart:
 596              	.LFB217:
 233:../Libraries/XMCLib/src/xmc_i2c.c **** 
 234:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master start condition along with read/write command to IN/TBUF register based on FIFO/non
 235:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 236:../Libraries/XMCLib/src/xmc_i2c.c **** {
 597              	 .loc 3 236 0
 598              	 .cfi_startproc
 599              	 
 600              	 
 601 0000 80B5     	 push {r7,lr}
 602              	.LCFI45:
 603              	 .cfi_def_cfa_offset 8
 604              	 .cfi_offset 7,-8
 605              	 .cfi_offset 14,-4
 606 0002 84B0     	 sub sp,sp,#16
 607              	.LCFI46:
 608              	 .cfi_def_cfa_offset 24
 609 0004 00AF     	 add r7,sp,#0
 610              	.LCFI47:
 611              	 .cfi_def_cfa_register 7
 612 0006 7860     	 str r0,[r7,#4]
 613 0008 0B46     	 mov r3,r1
 614 000a 7B80     	 strh r3,[r7,#2]
 615 000c 1346     	 mov r3,r2
 616 000e 7B70     	 strb r3,[r7,#1]
 237:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t temp;
 238:../Libraries/XMCLib/src/xmc_i2c.c ****   
 239:../Libraries/XMCLib/src/xmc_i2c.c ****   temp = addr | (uint32_t)XMC_I2C_CH_TDF_MASTER_START;
 617              	 .loc 3 239 0
 618 0010 7B88     	 ldrh r3,[r7,#2]
 619 0012 43F48063 	 orr r3,r3,#1024
 620 0016 9BB2     	 uxth r3,r3
 621 0018 FB60     	 str r3,[r7,#12]
 240:../Libraries/XMCLib/src/xmc_i2c.c ****   if (command == XMC_I2C_CH_CMD_READ)
 622              	 .loc 3 240 0
 623 001a 7B78     	 ldrb r3,[r7,#1]
 624 001c 012B     	 cmp r3,#1
 625 001e 03D1     	 bne .L36
 241:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 242:../Libraries/XMCLib/src/xmc_i2c.c ****     temp |= 0x1U;
 626              	 .loc 3 242 0
 627 0020 FB68     	 ldr r3,[r7,#12]
 628 0022 43F00103 	 orr r3,r3,#1
 629 0026 FB60     	 str r3,[r7,#12]
 630              	.L36:
 243:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 244:../Libraries/XMCLib/src/xmc_i2c.c **** 
 245:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 246:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 631              	 .loc 3 246 0
 632 0028 7B68     	 ldr r3,[r7,#4]
 633 002a D3F80831 	 ldr r3,[r3,#264]
 634 002e 03F0E063 	 and r3,r3,#117440512
 635 0032 002B     	 cmp r3,#0
 636 0034 10D1     	 bne .L37
 247:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 248:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 637              	 .loc 3 248 0
 638 0036 00BF     	 nop
 639              	.L38:
 640              	 .loc 3 248 0 is_stmt 0 discriminator 1
 641 0038 7868     	 ldr r0,[r7,#4]
 642 003a FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 643 003e 0346     	 mov r3,r0
 644 0040 802B     	 cmp r3,#128
 645 0042 F9D0     	 beq .L38
 249:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 250:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 251:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 252:../Libraries/XMCLib/src/xmc_i2c.c **** 
 253:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 254:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 646              	 .loc 3 254 0 is_stmt 1
 647 0044 7868     	 ldr r0,[r7,#4]
 648 0046 4FF40051 	 mov r1,#8192
 649 004a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 255:../Libraries/XMCLib/src/xmc_i2c.c **** 
 256:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = temp;
 650              	 .loc 3 256 0
 651 004e 7B68     	 ldr r3,[r7,#4]
 652 0050 FA68     	 ldr r2,[r7,#12]
 653 0052 C3F88020 	 str r2,[r3,#128]
 654 0056 03E0     	 b .L35
 655              	.L37:
 257:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 258:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 259:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 260:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = temp;
 656              	 .loc 3 260 0
 657 0058 7B68     	 ldr r3,[r7,#4]
 658 005a FA68     	 ldr r2,[r7,#12]
 659 005c C3F88021 	 str r2,[r3,#384]
 660              	.L35:
 261:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 262:../Libraries/XMCLib/src/xmc_i2c.c **** }
 661              	 .loc 3 262 0
 662 0060 1037     	 adds r7,r7,#16
 663              	.LCFI48:
 664              	 .cfi_def_cfa_offset 8
 665 0062 BD46     	 mov sp,r7
 666              	.LCFI49:
 667              	 .cfi_def_cfa_register 13
 668              	 
 669 0064 80BD     	 pop {r7,pc}
 670              	 .cfi_endproc
 671              	.LFE217:
 673 0066 00BF     	 .section .text.XMC_I2C_CH_MasterRepeatedStart,"ax",%progbits
 674              	 .align 2
 675              	 .global XMC_I2C_CH_MasterRepeatedStart
 676              	 .thumb
 677              	 .thumb_func
 679              	XMC_I2C_CH_MasterRepeatedStart:
 680              	.LFB218:
 263:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master repeated start condition along with read/write command to IN/TBUF register based on
 264:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 265:../Libraries/XMCLib/src/xmc_i2c.c **** {
 681              	 .loc 3 265 0
 682              	 .cfi_startproc
 683              	 
 684              	 
 685 0000 80B5     	 push {r7,lr}
 686              	.LCFI50:
 687              	 .cfi_def_cfa_offset 8
 688              	 .cfi_offset 7,-8
 689              	 .cfi_offset 14,-4
 690 0002 84B0     	 sub sp,sp,#16
 691              	.LCFI51:
 692              	 .cfi_def_cfa_offset 24
 693 0004 00AF     	 add r7,sp,#0
 694              	.LCFI52:
 695              	 .cfi_def_cfa_register 7
 696 0006 7860     	 str r0,[r7,#4]
 697 0008 0B46     	 mov r3,r1
 698 000a 7B80     	 strh r3,[r7,#2]
 699 000c 1346     	 mov r3,r2
 700 000e 7B70     	 strb r3,[r7,#1]
 266:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t tmp;
 267:../Libraries/XMCLib/src/xmc_i2c.c ****   tmp = addr | (uint32_t)XMC_I2C_CH_TDF_MASTER_RESTART;
 701              	 .loc 3 267 0
 702 0010 7B88     	 ldrh r3,[r7,#2]
 703 0012 43F4A063 	 orr r3,r3,#1280
 704 0016 9BB2     	 uxth r3,r3
 705 0018 FB60     	 str r3,[r7,#12]
 268:../Libraries/XMCLib/src/xmc_i2c.c ****   if (command == XMC_I2C_CH_CMD_READ)
 706              	 .loc 3 268 0
 707 001a 7B78     	 ldrb r3,[r7,#1]
 708 001c 012B     	 cmp r3,#1
 709 001e 03D1     	 bne .L41
 269:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 270:../Libraries/XMCLib/src/xmc_i2c.c ****     tmp |= 0x1U;
 710              	 .loc 3 270 0
 711 0020 FB68     	 ldr r3,[r7,#12]
 712 0022 43F00103 	 orr r3,r3,#1
 713 0026 FB60     	 str r3,[r7,#12]
 714              	.L41:
 271:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 272:../Libraries/XMCLib/src/xmc_i2c.c **** 
 273:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 274:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 715              	 .loc 3 274 0
 716 0028 7B68     	 ldr r3,[r7,#4]
 717 002a D3F80831 	 ldr r3,[r3,#264]
 718 002e 03F0E063 	 and r3,r3,#117440512
 719 0032 002B     	 cmp r3,#0
 720 0034 10D1     	 bne .L42
 275:../Libraries/XMCLib/src/xmc_i2c.c ****   {  
 276:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 721              	 .loc 3 276 0
 722 0036 00BF     	 nop
 723              	.L43:
 724              	 .loc 3 276 0 is_stmt 0 discriminator 1
 725 0038 7868     	 ldr r0,[r7,#4]
 726 003a FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 727 003e 0346     	 mov r3,r0
 728 0040 802B     	 cmp r3,#128
 729 0042 F9D0     	 beq .L43
 277:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 278:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 279:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 280:../Libraries/XMCLib/src/xmc_i2c.c **** 
 281:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 282:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 730              	 .loc 3 282 0 is_stmt 1
 731 0044 7868     	 ldr r0,[r7,#4]
 732 0046 4FF40051 	 mov r1,#8192
 733 004a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 283:../Libraries/XMCLib/src/xmc_i2c.c **** 
 284:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = tmp;
 734              	 .loc 3 284 0
 735 004e 7B68     	 ldr r3,[r7,#4]
 736 0050 FA68     	 ldr r2,[r7,#12]
 737 0052 C3F88020 	 str r2,[r3,#128]
 738 0056 03E0     	 b .L40
 739              	.L42:
 285:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 286:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 287:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 288:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = tmp;
 740              	 .loc 3 288 0
 741 0058 7B68     	 ldr r3,[r7,#4]
 742 005a FA68     	 ldr r2,[r7,#12]
 743 005c C3F88021 	 str r2,[r3,#384]
 744              	.L40:
 289:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 290:../Libraries/XMCLib/src/xmc_i2c.c **** }
 745              	 .loc 3 290 0
 746 0060 1037     	 adds r7,r7,#16
 747              	.LCFI53:
 748              	 .cfi_def_cfa_offset 8
 749 0062 BD46     	 mov sp,r7
 750              	.LCFI54:
 751              	 .cfi_def_cfa_register 13
 752              	 
 753 0064 80BD     	 pop {r7,pc}
 754              	 .cfi_endproc
 755              	.LFE218:
 757 0066 00BF     	 .section .text.XMC_I2C_CH_MasterStop,"ax",%progbits
 758              	 .align 2
 759              	 .global XMC_I2C_CH_MasterStop
 760              	 .thumb
 761              	 .thumb_func
 763              	XMC_I2C_CH_MasterStop:
 764              	.LFB219:
 291:../Libraries/XMCLib/src/xmc_i2c.c **** 
 292:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master stop command to IN/TBUF register based on FIFO/non-FIFO modes. */
 293:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel)
 294:../Libraries/XMCLib/src/xmc_i2c.c **** {
 765              	 .loc 3 294 0
 766              	 .cfi_startproc
 767              	 
 768              	 
 769 0000 80B5     	 push {r7,lr}
 770              	.LCFI55:
 771              	 .cfi_def_cfa_offset 8
 772              	 .cfi_offset 7,-8
 773              	 .cfi_offset 14,-4
 774 0002 82B0     	 sub sp,sp,#8
 775              	.LCFI56:
 776              	 .cfi_def_cfa_offset 16
 777 0004 00AF     	 add r7,sp,#0
 778              	.LCFI57:
 779              	 .cfi_def_cfa_register 7
 780 0006 7860     	 str r0,[r7,#4]
 295:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 296:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 781              	 .loc 3 296 0
 782 0008 7B68     	 ldr r3,[r7,#4]
 783 000a D3F80831 	 ldr r3,[r3,#264]
 784 000e 03F0E063 	 and r3,r3,#117440512
 785 0012 002B     	 cmp r3,#0
 786 0014 11D1     	 bne .L46
 297:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 298:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 787              	 .loc 3 298 0
 788 0016 00BF     	 nop
 789              	.L47:
 790              	 .loc 3 298 0 is_stmt 0 discriminator 1
 791 0018 7868     	 ldr r0,[r7,#4]
 792 001a FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 793 001e 0346     	 mov r3,r0
 794 0020 802B     	 cmp r3,#128
 795 0022 F9D0     	 beq .L47
 299:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 300:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 301:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 302:../Libraries/XMCLib/src/xmc_i2c.c **** 
 303:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 304:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 796              	 .loc 3 304 0 is_stmt 1
 797 0024 7868     	 ldr r0,[r7,#4]
 798 0026 4FF40051 	 mov r1,#8192
 799 002a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 305:../Libraries/XMCLib/src/xmc_i2c.c **** 
 306:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_STOP;
 800              	 .loc 3 306 0
 801 002e 7B68     	 ldr r3,[r7,#4]
 802 0030 4FF4C062 	 mov r2,#1536
 803 0034 C3F88020 	 str r2,[r3,#128]
 804 0038 04E0     	 b .L45
 805              	.L46:
 307:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 308:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 309:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 310:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = (uint32_t)XMC_I2C_CH_TDF_MASTER_STOP;
 806              	 .loc 3 310 0
 807 003a 7B68     	 ldr r3,[r7,#4]
 808 003c 4FF4C062 	 mov r2,#1536
 809 0040 C3F88021 	 str r2,[r3,#384]
 810              	.L45:
 311:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 312:../Libraries/XMCLib/src/xmc_i2c.c **** }
 811              	 .loc 3 312 0
 812 0044 0837     	 adds r7,r7,#8
 813              	.LCFI58:
 814              	 .cfi_def_cfa_offset 8
 815 0046 BD46     	 mov sp,r7
 816              	.LCFI59:
 817              	 .cfi_def_cfa_register 13
 818              	 
 819 0048 80BD     	 pop {r7,pc}
 820              	 .cfi_endproc
 821              	.LFE219:
 823 004a 00BF     	 .section .text.XMC_I2C_CH_MasterTransmit,"ax",%progbits
 824              	 .align 2
 825              	 .global XMC_I2C_CH_MasterTransmit
 826              	 .thumb
 827              	 .thumb_func
 829              	XMC_I2C_CH_MasterTransmit:
 830              	.LFB220:
 313:../Libraries/XMCLib/src/xmc_i2c.c **** 
 314:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master send command along with data to IN/TBUF register based on FIFO/non-FIFO modes. */
 315:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data)
 316:../Libraries/XMCLib/src/xmc_i2c.c **** {
 831              	 .loc 3 316 0
 832              	 .cfi_startproc
 833              	 
 834              	 
 835 0000 80B5     	 push {r7,lr}
 836              	.LCFI60:
 837              	 .cfi_def_cfa_offset 8
 838              	 .cfi_offset 7,-8
 839              	 .cfi_offset 14,-4
 840 0002 82B0     	 sub sp,sp,#8
 841              	.LCFI61:
 842              	 .cfi_def_cfa_offset 16
 843 0004 00AF     	 add r7,sp,#0
 844              	.LCFI62:
 845              	 .cfi_def_cfa_register 7
 846 0006 7860     	 str r0,[r7,#4]
 847 0008 0B46     	 mov r3,r1
 848 000a FB70     	 strb r3,[r7,#3]
 317:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 318:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 849              	 .loc 3 318 0
 850 000c 7B68     	 ldr r3,[r7,#4]
 851 000e D3F80831 	 ldr r3,[r3,#264]
 852 0012 03F0E063 	 and r3,r3,#117440512
 853 0016 002B     	 cmp r3,#0
 854 0018 10D1     	 bne .L50
 319:../Libraries/XMCLib/src/xmc_i2c.c ****   {    
 320:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 855              	 .loc 3 320 0
 856 001a 00BF     	 nop
 857              	.L51:
 858              	 .loc 3 320 0 is_stmt 0 discriminator 1
 859 001c 7868     	 ldr r0,[r7,#4]
 860 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 861 0022 0346     	 mov r3,r0
 862 0024 802B     	 cmp r3,#128
 863 0026 F9D0     	 beq .L51
 321:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 322:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 323:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 324:../Libraries/XMCLib/src/xmc_i2c.c **** 
 325:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 326:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 864              	 .loc 3 326 0 is_stmt 1
 865 0028 7868     	 ldr r0,[r7,#4]
 866 002a 4FF40051 	 mov r1,#8192
 867 002e FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 327:../Libraries/XMCLib/src/xmc_i2c.c **** 
 328:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_SEND | data;
 868              	 .loc 3 328 0
 869 0032 FA78     	 ldrb r2,[r7,#3]
 870 0034 7B68     	 ldr r3,[r7,#4]
 871 0036 C3F88020 	 str r2,[r3,#128]
 872 003a 03E0     	 b .L49
 873              	.L50:
 329:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 330:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 331:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 332:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_SEND | data;
 874              	 .loc 3 332 0
 875 003c FA78     	 ldrb r2,[r7,#3]
 876 003e 7B68     	 ldr r3,[r7,#4]
 877 0040 C3F88021 	 str r2,[r3,#384]
 878              	.L49:
 333:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 334:../Libraries/XMCLib/src/xmc_i2c.c **** }
 879              	 .loc 3 334 0
 880 0044 0837     	 adds r7,r7,#8
 881              	.LCFI63:
 882              	 .cfi_def_cfa_offset 8
 883 0046 BD46     	 mov sp,r7
 884              	.LCFI64:
 885              	 .cfi_def_cfa_register 13
 886              	 
 887 0048 80BD     	 pop {r7,pc}
 888              	 .cfi_endproc
 889              	.LFE220:
 891 004a 00BF     	 .section .text.XMC_I2C_CH_SlaveTransmit,"ax",%progbits
 892              	 .align 2
 893              	 .global XMC_I2C_CH_SlaveTransmit
 894              	 .thumb
 895              	 .thumb_func
 897              	XMC_I2C_CH_SlaveTransmit:
 898              	.LFB221:
 335:../Libraries/XMCLib/src/xmc_i2c.c **** 
 336:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends slave send command along with data to IN/TBUF register based on FIFO/non-FIFO modes. */
 337:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data)
 338:../Libraries/XMCLib/src/xmc_i2c.c **** {
 899              	 .loc 3 338 0
 900              	 .cfi_startproc
 901              	 
 902              	 
 903 0000 80B5     	 push {r7,lr}
 904              	.LCFI65:
 905              	 .cfi_def_cfa_offset 8
 906              	 .cfi_offset 7,-8
 907              	 .cfi_offset 14,-4
 908 0002 82B0     	 sub sp,sp,#8
 909              	.LCFI66:
 910              	 .cfi_def_cfa_offset 16
 911 0004 00AF     	 add r7,sp,#0
 912              	.LCFI67:
 913              	 .cfi_def_cfa_register 7
 914 0006 7860     	 str r0,[r7,#4]
 915 0008 0B46     	 mov r3,r1
 916 000a FB70     	 strb r3,[r7,#3]
 339:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 340:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 917              	 .loc 3 340 0
 918 000c 7B68     	 ldr r3,[r7,#4]
 919 000e D3F80831 	 ldr r3,[r3,#264]
 920 0012 03F0E063 	 and r3,r3,#117440512
 921 0016 002B     	 cmp r3,#0
 922 0018 12D1     	 bne .L54
 341:../Libraries/XMCLib/src/xmc_i2c.c ****   {    
 342:../Libraries/XMCLib/src/xmc_i2c.c ****     while(XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 923              	 .loc 3 342 0
 924 001a 00BF     	 nop
 925              	.L55:
 926              	 .loc 3 342 0 is_stmt 0 discriminator 1
 927 001c 7868     	 ldr r0,[r7,#4]
 928 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 929 0022 0346     	 mov r3,r0
 930 0024 802B     	 cmp r3,#128
 931 0026 F9D0     	 beq .L55
 343:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 344:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 345:../Libraries/XMCLib/src/xmc_i2c.c ****     }    
 346:../Libraries/XMCLib/src/xmc_i2c.c **** 
 347:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 348:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 932              	 .loc 3 348 0 is_stmt 1
 933 0028 7868     	 ldr r0,[r7,#4]
 934 002a 4FF40051 	 mov r1,#8192
 935 002e FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 349:../Libraries/XMCLib/src/xmc_i2c.c **** 
 350:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_SLAVE_SEND | data;
 936              	 .loc 3 350 0
 937 0032 FB78     	 ldrb r3,[r7,#3]
 938 0034 43F48072 	 orr r2,r3,#256
 939 0038 7B68     	 ldr r3,[r7,#4]
 940 003a C3F88020 	 str r2,[r3,#128]
 941 003e 05E0     	 b .L53
 942              	.L54:
 351:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 352:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 353:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 354:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_SLAVE_SEND | data;
 943              	 .loc 3 354 0
 944 0040 FB78     	 ldrb r3,[r7,#3]
 945 0042 43F48072 	 orr r2,r3,#256
 946 0046 7B68     	 ldr r3,[r7,#4]
 947 0048 C3F88021 	 str r2,[r3,#384]
 948              	.L53:
 355:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 356:../Libraries/XMCLib/src/xmc_i2c.c **** }
 949              	 .loc 3 356 0
 950 004c 0837     	 adds r7,r7,#8
 951              	.LCFI68:
 952              	 .cfi_def_cfa_offset 8
 953 004e BD46     	 mov sp,r7
 954              	.LCFI69:
 955              	 .cfi_def_cfa_register 13
 956              	 
 957 0050 80BD     	 pop {r7,pc}
 958              	 .cfi_endproc
 959              	.LFE221:
 961 0052 00BF     	 .section .text.XMC_I2C_CH_MasterReceiveAck,"ax",%progbits
 962              	 .align 2
 963              	 .global XMC_I2C_CH_MasterReceiveAck
 964              	 .thumb
 965              	 .thumb_func
 967              	XMC_I2C_CH_MasterReceiveAck:
 968              	.LFB222:
 357:../Libraries/XMCLib/src/xmc_i2c.c **** 
 358:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master receive ack command to IN/TBUF register based on FIFO/non-FIFO modes. */
 359:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel)
 360:../Libraries/XMCLib/src/xmc_i2c.c **** {
 969              	 .loc 3 360 0
 970              	 .cfi_startproc
 971              	 
 972              	 
 973 0000 80B5     	 push {r7,lr}
 974              	.LCFI70:
 975              	 .cfi_def_cfa_offset 8
 976              	 .cfi_offset 7,-8
 977              	 .cfi_offset 14,-4
 978 0002 82B0     	 sub sp,sp,#8
 979              	.LCFI71:
 980              	 .cfi_def_cfa_offset 16
 981 0004 00AF     	 add r7,sp,#0
 982              	.LCFI72:
 983              	 .cfi_def_cfa_register 7
 984 0006 7860     	 str r0,[r7,#4]
 361:../Libraries/XMCLib/src/xmc_i2c.c **** /* Check FIFO size */
 362:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 985              	 .loc 3 362 0
 986 0008 7B68     	 ldr r3,[r7,#4]
 987 000a D3F80831 	 ldr r3,[r3,#264]
 988 000e 03F0E063 	 and r3,r3,#117440512
 989 0012 002B     	 cmp r3,#0
 990 0014 11D1     	 bne .L58
 363:../Libraries/XMCLib/src/xmc_i2c.c ****   {    
 364:../Libraries/XMCLib/src/xmc_i2c.c ****     while(XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 991              	 .loc 3 364 0
 992 0016 00BF     	 nop
 993              	.L59:
 994              	 .loc 3 364 0 is_stmt 0 discriminator 1
 995 0018 7868     	 ldr r0,[r7,#4]
 996 001a FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 997 001e 0346     	 mov r3,r0
 998 0020 802B     	 cmp r3,#128
 999 0022 F9D0     	 beq .L59
 365:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 366:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 367:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 368:../Libraries/XMCLib/src/xmc_i2c.c **** 
 369:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 370:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 1000              	 .loc 3 370 0 is_stmt 1
 1001 0024 7868     	 ldr r0,[r7,#4]
 1002 0026 4FF40051 	 mov r1,#8192
 1003 002a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 371:../Libraries/XMCLib/src/xmc_i2c.c **** 
 372:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK;
 1004              	 .loc 3 372 0
 1005 002e 7B68     	 ldr r3,[r7,#4]
 1006 0030 4FF40072 	 mov r2,#512
 1007 0034 C3F88020 	 str r2,[r3,#128]
 1008 0038 04E0     	 b .L57
 1009              	.L58:
 373:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 374:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 375:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 376:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK;
 1010              	 .loc 3 376 0
 1011 003a 7B68     	 ldr r3,[r7,#4]
 1012 003c 4FF40072 	 mov r2,#512
 1013 0040 C3F88021 	 str r2,[r3,#384]
 1014              	.L57:
 377:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 378:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1015              	 .loc 3 378 0
 1016 0044 0837     	 adds r7,r7,#8
 1017              	.LCFI73:
 1018              	 .cfi_def_cfa_offset 8
 1019 0046 BD46     	 mov sp,r7
 1020              	.LCFI74:
 1021              	 .cfi_def_cfa_register 13
 1022              	 
 1023 0048 80BD     	 pop {r7,pc}
 1024              	 .cfi_endproc
 1025              	.LFE222:
 1027 004a 00BF     	 .section .text.XMC_I2C_CH_MasterReceiveNack,"ax",%progbits
 1028              	 .align 2
 1029              	 .global XMC_I2C_CH_MasterReceiveNack
 1030              	 .thumb
 1031              	 .thumb_func
 1033              	XMC_I2C_CH_MasterReceiveNack:
 1034              	.LFB223:
 379:../Libraries/XMCLib/src/xmc_i2c.c **** 
 380:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master receive nack command to IN/TBUF register based on FIFO/non-FIFO modes. */
 381:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel)
 382:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1035              	 .loc 3 382 0
 1036              	 .cfi_startproc
 1037              	 
 1038              	 
 1039 0000 80B5     	 push {r7,lr}
 1040              	.LCFI75:
 1041              	 .cfi_def_cfa_offset 8
 1042              	 .cfi_offset 7,-8
 1043              	 .cfi_offset 14,-4
 1044 0002 82B0     	 sub sp,sp,#8
 1045              	.LCFI76:
 1046              	 .cfi_def_cfa_offset 16
 1047 0004 00AF     	 add r7,sp,#0
 1048              	.LCFI77:
 1049              	 .cfi_def_cfa_register 7
 1050 0006 7860     	 str r0,[r7,#4]
 383:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 384:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 1051              	 .loc 3 384 0
 1052 0008 7B68     	 ldr r3,[r7,#4]
 1053 000a D3F80831 	 ldr r3,[r3,#264]
 1054 000e 03F0E063 	 and r3,r3,#117440512
 1055 0012 002B     	 cmp r3,#0
 1056 0014 11D1     	 bne .L62
 385:../Libraries/XMCLib/src/xmc_i2c.c ****   {    
 386:../Libraries/XMCLib/src/xmc_i2c.c ****     while(XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 1057              	 .loc 3 386 0
 1058 0016 00BF     	 nop
 1059              	.L63:
 1060              	 .loc 3 386 0 is_stmt 0 discriminator 1
 1061 0018 7868     	 ldr r0,[r7,#4]
 1062 001a FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 1063 001e 0346     	 mov r3,r0
 1064 0020 802B     	 cmp r3,#128
 1065 0022 F9D0     	 beq .L63
 387:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 388:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 389:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 390:../Libraries/XMCLib/src/xmc_i2c.c **** 
 391:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 392:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 1066              	 .loc 3 392 0 is_stmt 1
 1067 0024 7868     	 ldr r0,[r7,#4]
 1068 0026 4FF40051 	 mov r1,#8192
 1069 002a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 393:../Libraries/XMCLib/src/xmc_i2c.c **** 
 394:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK;
 1070              	 .loc 3 394 0
 1071 002e 7B68     	 ldr r3,[r7,#4]
 1072 0030 4FF44072 	 mov r2,#768
 1073 0034 C3F88020 	 str r2,[r3,#128]
 1074 0038 04E0     	 b .L61
 1075              	.L62:
 395:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 396:../Libraries/XMCLib/src/xmc_i2c.c ****   else 
 397:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 398:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK;
 1076              	 .loc 3 398 0
 1077 003a 7B68     	 ldr r3,[r7,#4]
 1078 003c 4FF44072 	 mov r2,#768
 1079 0040 C3F88021 	 str r2,[r3,#384]
 1080              	.L61:
 399:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 400:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1081              	 .loc 3 400 0
 1082 0044 0837     	 adds r7,r7,#8
 1083              	.LCFI78:
 1084              	 .cfi_def_cfa_offset 8
 1085 0046 BD46     	 mov sp,r7
 1086              	.LCFI79:
 1087              	 .cfi_def_cfa_register 13
 1088              	 
 1089 0048 80BD     	 pop {r7,pc}
 1090              	 .cfi_endproc
 1091              	.LFE223:
 1093 004a 00BF     	 .section .text.XMC_I2C_CH_GetReceivedData,"ax",%progbits
 1094              	 .align 2
 1095              	 .global XMC_I2C_CH_GetReceivedData
 1096              	 .thumb
 1097              	 .thumb_func
 1099              	XMC_I2C_CH_GetReceivedData:
 1100              	.LFB224:
 401:../Libraries/XMCLib/src/xmc_i2c.c **** 
 402:../Libraries/XMCLib/src/xmc_i2c.c **** /* Reads the data from RBUF if FIFO size is 0 otherwise from OUTR. */
 403:../Libraries/XMCLib/src/xmc_i2c.c **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel)
 404:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1101              	 .loc 3 404 0
 1102              	 .cfi_startproc
 1103              	 
 1104              	 
 1105              	 
 1106 0000 80B4     	 push {r7}
 1107              	.LCFI80:
 1108              	 .cfi_def_cfa_offset 4
 1109              	 .cfi_offset 7,-4
 1110 0002 85B0     	 sub sp,sp,#20
 1111              	.LCFI81:
 1112              	 .cfi_def_cfa_offset 24
 1113 0004 00AF     	 add r7,sp,#0
 1114              	.LCFI82:
 1115              	 .cfi_def_cfa_register 7
 1116 0006 7860     	 str r0,[r7,#4]
 405:../Libraries/XMCLib/src/xmc_i2c.c ****   uint8_t retval;
 406:../Libraries/XMCLib/src/xmc_i2c.c **** 
 407:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 408:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->RBCTR & USIC_CH_RBCTR_SIZE_Msk) == 0U)
 1117              	 .loc 3 408 0
 1118 0008 7B68     	 ldr r3,[r7,#4]
 1119 000a D3F80C31 	 ldr r3,[r3,#268]
 1120 000e 03F0E063 	 and r3,r3,#117440512
 1121 0012 002B     	 cmp r3,#0
 1122 0014 03D1     	 bne .L66
 409:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 410:../Libraries/XMCLib/src/xmc_i2c.c ****     retval = (uint8_t)channel->RBUF;
 1123              	 .loc 3 410 0
 1124 0016 7B68     	 ldr r3,[r7,#4]
 1125 0018 5B6D     	 ldr r3,[r3,#84]
 1126 001a FB73     	 strb r3,[r7,#15]
 1127 001c 03E0     	 b .L67
 1128              	.L66:
 411:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 412:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 413:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 414:../Libraries/XMCLib/src/xmc_i2c.c ****     retval = (uint8_t)channel->OUTR;
 1129              	 .loc 3 414 0
 1130 001e 7B68     	 ldr r3,[r7,#4]
 1131 0020 D3F81C31 	 ldr r3,[r3,#284]
 1132 0024 FB73     	 strb r3,[r7,#15]
 1133              	.L67:
 415:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 416:../Libraries/XMCLib/src/xmc_i2c.c **** 
 417:../Libraries/XMCLib/src/xmc_i2c.c ****   return retval;
 1134              	 .loc 3 417 0
 1135 0026 FB7B     	 ldrb r3,[r7,#15]
 418:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1136              	 .loc 3 418 0
 1137 0028 1846     	 mov r0,r3
 1138 002a 1437     	 adds r7,r7,#20
 1139              	.LCFI83:
 1140              	 .cfi_def_cfa_offset 4
 1141 002c BD46     	 mov sp,r7
 1142              	.LCFI84:
 1143              	 .cfi_def_cfa_register 13
 1144              	 
 1145 002e 5DF8047B 	 ldr r7,[sp],#4
 1146              	.LCFI85:
 1147              	 .cfi_restore 7
 1148              	 .cfi_def_cfa_offset 0
 1149 0032 7047     	 bx lr
 1150              	 .cfi_endproc
 1151              	.LFE224:
 1153              	 .section .text.XMC_I2C_CH_Stop,"ax",%progbits
 1154              	 .align 2
 1155              	 .global XMC_I2C_CH_Stop
 1156              	 .thumb
 1157              	 .thumb_func
 1159              	XMC_I2C_CH_Stop:
 1160              	.LFB225:
 419:../Libraries/XMCLib/src/xmc_i2c.c **** 
 420:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the operating mode of USIC to IDLE */
 421:../Libraries/XMCLib/src/xmc_i2c.c **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel)
 422:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1161              	 .loc 3 422 0
 1162              	 .cfi_startproc
 1163              	 
 1164              	 
 1165 0000 80B5     	 push {r7,lr}
 1166              	.LCFI86:
 1167              	 .cfi_def_cfa_offset 8
 1168              	 .cfi_offset 7,-8
 1169              	 .cfi_offset 14,-4
 1170 0002 84B0     	 sub sp,sp,#16
 1171              	.LCFI87:
 1172              	 .cfi_def_cfa_offset 24
 1173 0004 00AF     	 add r7,sp,#0
 1174              	.LCFI88:
 1175              	 .cfi_def_cfa_register 7
 1176 0006 7860     	 str r0,[r7,#4]
 423:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_STATUS_t status = XMC_I2C_CH_STATUS_OK;
 1177              	 .loc 3 423 0
 1178 0008 0023     	 movs r3,#0
 1179 000a FB73     	 strb r3,[r7,#15]
 424:../Libraries/XMCLib/src/xmc_i2c.c **** 
 425:../Libraries/XMCLib/src/xmc_i2c.c ****   if (((uint32_t)XMC_USIC_CH_GetTransmitBufferStatus(channel) & (uint32_t)XMC_USIC_CH_TBUF_STATUS_B
 1180              	 .loc 3 425 0
 1181 000c 7868     	 ldr r0,[r7,#4]
 1182 000e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 1183 0012 0346     	 mov r3,r0
 1184 0014 DBB2     	 uxtb r3,r3
 1185 0016 5BB2     	 sxtb r3,r3
 1186 0018 002B     	 cmp r3,#0
 1187 001a 02DA     	 bge .L70
 426:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 427:../Libraries/XMCLib/src/xmc_i2c.c ****     status = XMC_I2C_CH_STATUS_BUSY;
 1188              	 .loc 3 427 0
 1189 001c 0223     	 movs r3,#2
 1190 001e FB73     	 strb r3,[r7,#15]
 1191 0020 03E0     	 b .L71
 1192              	.L70:
 428:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 429:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 430:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 431:../Libraries/XMCLib/src/xmc_i2c.c ****     /* USIC channel in IDLE mode */
 432:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_IDLE);
 1193              	 .loc 3 432 0
 1194 0022 7868     	 ldr r0,[r7,#4]
 1195 0024 0021     	 movs r1,#0
 1196 0026 FFF7FEFF 	 bl XMC_USIC_CH_SetMode
 1197              	.L71:
 433:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 434:../Libraries/XMCLib/src/xmc_i2c.c ****   return status;
 1198              	 .loc 3 434 0
 1199 002a FB7B     	 ldrb r3,[r7,#15]
 435:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1200              	 .loc 3 435 0
 1201 002c 1846     	 mov r0,r3
 1202 002e 1037     	 adds r7,r7,#16
 1203              	.LCFI89:
 1204              	 .cfi_def_cfa_offset 8
 1205 0030 BD46     	 mov sp,r7
 1206              	.LCFI90:
 1207              	 .cfi_def_cfa_register 13
 1208              	 
 1209 0032 80BD     	 pop {r7,pc}
 1210              	 .cfi_endproc
 1211              	.LFE225:
 1213              	 .section .text.XMC_I2C_CH_EnableEvent,"ax",%progbits
 1214              	 .align 2
 1215              	 .global XMC_I2C_CH_EnableEvent
 1216              	 .thumb
 1217              	 .thumb_func
 1219              	XMC_I2C_CH_EnableEvent:
 1220              	.LFB226:
 436:../Libraries/XMCLib/src/xmc_i2c.c **** 
 437:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 438:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1221              	 .loc 3 438 0
 1222              	 .cfi_startproc
 1223              	 
 1224              	 
 1225              	 
 1226 0000 80B4     	 push {r7}
 1227              	.LCFI91:
 1228              	 .cfi_def_cfa_offset 4
 1229              	 .cfi_offset 7,-4
 1230 0002 83B0     	 sub sp,sp,#12
 1231              	.LCFI92:
 1232              	 .cfi_def_cfa_offset 16
 1233 0004 00AF     	 add r7,sp,#0
 1234              	.LCFI93:
 1235              	 .cfi_def_cfa_register 7
 1236 0006 7860     	 str r0,[r7,#4]
 1237 0008 3960     	 str r1,[r7]
 439:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR |= (event&0x1fc00U);
 1238              	 .loc 3 439 0
 1239 000a 7B68     	 ldr r3,[r7,#4]
 1240 000c 1A6C     	 ldr r2,[r3,#64]
 1241 000e 3B68     	 ldr r3,[r7]
 1242 0010 03F4FE33 	 and r3,r3,#130048
 1243 0014 1A43     	 orrs r2,r2,r3
 1244 0016 7B68     	 ldr r3,[r7,#4]
 1245 0018 1A64     	 str r2,[r3,#64]
 440:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PCR_IICMode |= ((event) & 0x41fc0000U);
 1246              	 .loc 3 440 0
 1247 001a 7B68     	 ldr r3,[r7,#4]
 1248 001c DA6B     	 ldr r2,[r3,#60]
 1249 001e 3968     	 ldr r1,[r7]
 1250 0020 044B     	 ldr r3,.L74
 1251 0022 0B40     	 ands r3,r3,r1
 1252 0024 1A43     	 orrs r2,r2,r3
 1253 0026 7B68     	 ldr r3,[r7,#4]
 1254 0028 DA63     	 str r2,[r3,#60]
 441:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1255              	 .loc 3 441 0
 1256 002a 0C37     	 adds r7,r7,#12
 1257              	.LCFI94:
 1258              	 .cfi_def_cfa_offset 4
 1259 002c BD46     	 mov sp,r7
 1260              	.LCFI95:
 1261              	 .cfi_def_cfa_register 13
 1262              	 
 1263 002e 5DF8047B 	 ldr r7,[sp],#4
 1264              	.LCFI96:
 1265              	 .cfi_restore 7
 1266              	 .cfi_def_cfa_offset 0
 1267 0032 7047     	 bx lr
 1268              	.L75:
 1269              	 .align 2
 1270              	.L74:
 1271 0034 0000FC41 	 .word 1107034112
 1272              	 .cfi_endproc
 1273              	.LFE226:
 1275              	 .section .text.XMC_I2C_CH_DisableEvent,"ax",%progbits
 1276              	 .align 2
 1277              	 .global XMC_I2C_CH_DisableEvent
 1278              	 .thumb
 1279              	 .thumb_func
 1281              	XMC_I2C_CH_DisableEvent:
 1282              	.LFB227:
 442:../Libraries/XMCLib/src/xmc_i2c.c **** 
 443:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 444:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1283              	 .loc 3 444 0
 1284              	 .cfi_startproc
 1285              	 
 1286              	 
 1287              	 
 1288 0000 80B4     	 push {r7}
 1289              	.LCFI97:
 1290              	 .cfi_def_cfa_offset 4
 1291              	 .cfi_offset 7,-4
 1292 0002 83B0     	 sub sp,sp,#12
 1293              	.LCFI98:
 1294              	 .cfi_def_cfa_offset 16
 1295 0004 00AF     	 add r7,sp,#0
 1296              	.LCFI99:
 1297              	 .cfi_def_cfa_register 7
 1298 0006 7860     	 str r0,[r7,#4]
 1299 0008 3960     	 str r1,[r7]
 445:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR &= (uint32_t)~(event&0x1fc00U);
 1300              	 .loc 3 445 0
 1301 000a 7B68     	 ldr r3,[r7,#4]
 1302 000c 1A6C     	 ldr r2,[r3,#64]
 1303 000e 3B68     	 ldr r3,[r7]
 1304 0010 03F4FE33 	 and r3,r3,#130048
 1305 0014 DB43     	 mvns r3,r3
 1306 0016 1A40     	 ands r2,r2,r3
 1307 0018 7B68     	 ldr r3,[r7,#4]
 1308 001a 1A64     	 str r2,[r3,#64]
 446:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PCR_IICMode &= (uint32_t)~((event) & 0x41fc0000U);
 1309              	 .loc 3 446 0
 1310 001c 7B68     	 ldr r3,[r7,#4]
 1311 001e DA6B     	 ldr r2,[r3,#60]
 1312 0020 3968     	 ldr r1,[r7]
 1313 0022 054B     	 ldr r3,.L77
 1314 0024 0B40     	 ands r3,r3,r1
 1315 0026 DB43     	 mvns r3,r3
 1316 0028 1A40     	 ands r2,r2,r3
 1317 002a 7B68     	 ldr r3,[r7,#4]
 1318 002c DA63     	 str r2,[r3,#60]
 447:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1319              	 .loc 3 447 0
 1320 002e 0C37     	 adds r7,r7,#12
 1321              	.LCFI100:
 1322              	 .cfi_def_cfa_offset 4
 1323 0030 BD46     	 mov sp,r7
 1324              	.LCFI101:
 1325              	 .cfi_def_cfa_register 13
 1326              	 
 1327 0032 5DF8047B 	 ldr r7,[sp],#4
 1328              	.LCFI102:
 1329              	 .cfi_restore 7
 1330              	 .cfi_def_cfa_offset 0
 1331 0036 7047     	 bx lr
 1332              	.L78:
 1333              	 .align 2
 1334              	.L77:
 1335 0038 0000FC41 	 .word 1107034112
 1336              	 .cfi_endproc
 1337              	.LFE227:
 1339              	 .text
 1340              	.Letext0:
 1341              	 .file 4 "e:\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1342              	 .file 5 "e:\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1343              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/bissc_io_ce/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_i2c.c
    {standard input}:20     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:67     .text.XMC_USIC_CH_SetMode:00000000 $t
    {standard input}:71     .text.XMC_USIC_CH_SetMode:00000000 XMC_USIC_CH_SetMode
    {standard input}:116    .text.XMC_I2C_CH_ClearStatusFlag:00000000 $t
    {standard input}:120    .text.XMC_I2C_CH_ClearStatusFlag:00000000 XMC_I2C_CH_ClearStatusFlag
    {standard input}:164    .text.XMC_I2C_CH_Init:00000000 $t
    {standard input}:169    .text.XMC_I2C_CH_Init:00000000 XMC_I2C_CH_Init
    {standard input}:245    .text.XMC_I2C_CH_SetSlaveAddress:00000000 XMC_I2C_CH_SetSlaveAddress
    {standard input}:478    .text.XMC_I2C_CH_SetBaudrateEx:00000000 XMC_I2C_CH_SetBaudrateEx
    {standard input}:235    .text.XMC_I2C_CH_Init:00000050 $d
    {standard input}:240    .text.XMC_I2C_CH_SetSlaveAddress:00000000 $t
    {standard input}:304    .text.XMC_I2C_CH_GetSlaveAddress:00000000 $t
    {standard input}:309    .text.XMC_I2C_CH_GetSlaveAddress:00000000 XMC_I2C_CH_GetSlaveAddress
    {standard input}:373    .text.XMC_I2C_CH_SetBaudrate:00000000 $t
    {standard input}:378    .text.XMC_I2C_CH_SetBaudrate:00000000 XMC_I2C_CH_SetBaudrate
    {standard input}:467    .text.XMC_I2C_CH_SetBaudrate:00000070 $d
    {standard input}:473    .text.XMC_I2C_CH_SetBaudrateEx:00000000 $t
    {standard input}:584    .text.XMC_I2C_CH_SetBaudrateEx:00000090 $d
    {standard input}:590    .text.XMC_I2C_CH_MasterStart:00000000 $t
    {standard input}:595    .text.XMC_I2C_CH_MasterStart:00000000 XMC_I2C_CH_MasterStart
    {standard input}:674    .text.XMC_I2C_CH_MasterRepeatedStart:00000000 $t
    {standard input}:679    .text.XMC_I2C_CH_MasterRepeatedStart:00000000 XMC_I2C_CH_MasterRepeatedStart
    {standard input}:758    .text.XMC_I2C_CH_MasterStop:00000000 $t
    {standard input}:763    .text.XMC_I2C_CH_MasterStop:00000000 XMC_I2C_CH_MasterStop
    {standard input}:824    .text.XMC_I2C_CH_MasterTransmit:00000000 $t
    {standard input}:829    .text.XMC_I2C_CH_MasterTransmit:00000000 XMC_I2C_CH_MasterTransmit
    {standard input}:892    .text.XMC_I2C_CH_SlaveTransmit:00000000 $t
    {standard input}:897    .text.XMC_I2C_CH_SlaveTransmit:00000000 XMC_I2C_CH_SlaveTransmit
    {standard input}:962    .text.XMC_I2C_CH_MasterReceiveAck:00000000 $t
    {standard input}:967    .text.XMC_I2C_CH_MasterReceiveAck:00000000 XMC_I2C_CH_MasterReceiveAck
    {standard input}:1028   .text.XMC_I2C_CH_MasterReceiveNack:00000000 $t
    {standard input}:1033   .text.XMC_I2C_CH_MasterReceiveNack:00000000 XMC_I2C_CH_MasterReceiveNack
    {standard input}:1094   .text.XMC_I2C_CH_GetReceivedData:00000000 $t
    {standard input}:1099   .text.XMC_I2C_CH_GetReceivedData:00000000 XMC_I2C_CH_GetReceivedData
    {standard input}:1154   .text.XMC_I2C_CH_Stop:00000000 $t
    {standard input}:1159   .text.XMC_I2C_CH_Stop:00000000 XMC_I2C_CH_Stop
    {standard input}:1214   .text.XMC_I2C_CH_EnableEvent:00000000 $t
    {standard input}:1219   .text.XMC_I2C_CH_EnableEvent:00000000 XMC_I2C_CH_EnableEvent
    {standard input}:1271   .text.XMC_I2C_CH_EnableEvent:00000034 $d
    {standard input}:1276   .text.XMC_I2C_CH_DisableEvent:00000000 $t
    {standard input}:1281   .text.XMC_I2C_CH_DisableEvent:00000000 XMC_I2C_CH_DisableEvent
    {standard input}:1335   .text.XMC_I2C_CH_DisableEvent:00000038 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_Enable
XMC_USIC_CH_SetBaudrate
XMC_USIC_CH_SetBaudrateEx
